<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LXiHa`Notes</title>
  
  <subtitle>The House Belong to Love and Freedom.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liujunjie11.github.io/"/>
  <updated>2018-09-16T03:06:34.833Z</updated>
  <id>https://liujunjie11.github.io/</id>
  
  <author>
    <name>刘俊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初学机器学习指南</title>
    <link href="https://liujunjie11.github.io/2018/09/16/%E5%88%9D%E5%AD%A6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>https://liujunjie11.github.io/2018/09/16/初学机器学习指南/</id>
    <published>2018-09-16T02:06:47.000Z</published>
    <updated>2018-09-16T03:06:34.833Z</updated>
    
    <content type="html"><![CDATA[<p>老早就想写下这一篇文章了，对我来说这个意义很大。</p><p>以下是我开始真正学习机器学习的入门经历，在这个过程中我感到异常的轻松(在仅仅是了解学习机器学习知识的过程中)，为何说是“真正的”开始学习呢？因为之前有过接触但是进度很慢…我相信有许多的人在选择如何入门的时候肯定也有这样的麻烦。废话不多说，开始说说如何以我的方法尽快入门吧。希望以此来帮助需要的人。</p><ul><li><strong>入门：看书，看视频，记笔记，回顾思考。</strong></li></ul><blockquote><p>无非就是这样的套路。顺序不重要，但是在此间交叉切换的过程却很重要。你不可能在入门的过程中一直的保持看书或者是看视频，so,我的意思已经明了，明者自明，哈哈，但是学会记笔记的却是最重要的，这点我有亲身体验，相信你也是。</p></blockquote><h1 id="以kaggle为起点"><a href="#以kaggle为起点" class="headerlink" title="以kaggle为起点"></a>以kaggle为起点</h1><p>我开始学习机器学习是因为我想着入数据挖掘的坑，我对<em>kaggle</em>早已有过了解，我在掌握一点点的机器学习概念(没错，仅仅是概念)之后就奋不顾身的投入到了<em>kaggle</em>的一个入门级比赛当中去了。补充一下，在这之前我是有写过数据分析的一些小程序的…</p><p>这个实践的入门级比赛即是：<strong>Exploring Survival on the Titanic</strong>，经典的<em>泰坦尼克号预测</em>入门级比赛。</p><p>现在需要的即是查找一些文章来参考模仿并且投入实践，一切学习都是从模仿开始的，静下心来，一步步实践，遇到问题利用好搜索引擎。有相关的错误出现一般可以将错误信息复制粘贴到搜索引擎上，一般都会有答案出现(一般都是英语答案)。不要畏惧英语。</p><p>具体哪些文章可参考：</p><ul><li><p>1，R实现：<a href="https://zhuanlan.zhihu.com/p/27655949" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/27655949</a></p></li><li><p>2，python实现：<a href="https://zhuanlan.zhihu.com/p/33733586" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/33733586</a></p></li><li><p>3，python实现：<a href="http://www.jasongj.com/ml/classification/" target="_blank" rel="external">http://www.jasongj.com/ml/classification/</a></p></li><li><p>文章是参考不完的，但是还有一个重要的推荐，那就是<em>kaggle</em>本身的资源利用，即在每一个比赛都有<em>Kernel</em>资源分享，那是做过的前辈分享的经验，务必利用好。</p></li></ul><blockquote><p>在这个过程中，你可能想放弃，因为你什么都不懂..但是，你也要坚持下去，至少把流程是怎么一回事搞清楚。期间你可能会遇到编码问题，还有一些意外的错误问题，还是一句话，利用好搜索引擎。</p></blockquote><h1 id="工具选择"><a href="#工具选择" class="headerlink" title="工具选择"></a>工具选择</h1><ul><li><p><a href="https://www.anaconda.com/download/#macos" target="_blank" rel="external">Anaconda</a></p></li><li><p>Anaconda其中内嵌的notebook</p></li></ul><blockquote><p>非常不错，看起来很舒服，但是也有一些缺点，基本上可以忽略。notebook写python写R都是可以的，具体我有写过<a href="https://liujunjie11.github.io/2018/06/04/在Jupyter-Notebook中安装多种语言内核/#more">一篇文章介绍</a>。另外，出现的错误我也有相关的记录，自行根据需求查找。一句话说得好，一切发明都是根据需求产生的。</p></blockquote><h1 id="入门，机器学习理论"><a href="#入门，机器学习理论" class="headerlink" title="入门，机器学习理论"></a>入门，机器学习理论</h1><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li><p>1，<a href="https://github.com/hahaahaha111/Coursera-ML-AndrewNg-Notes" target="_blank" rel="external">吴恩达机器学习</a></p></li><li><p>2，<a href="https://github.com/hahaahaha111/deeplearning_ai_books" target="_blank" rel="external">吴恩达深度学习</a></p></li></ul><blockquote><p>视频的话看这个基本上差不多做个了解，网易云课堂也可查到相关的视频。上面的链接里面有作者的笔记记录，可以看视频再来看一遍对应的笔记加深印象。记得做笔记。</p></blockquote><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ul><li><p>1，<a href="https://pan.baidu.com/s/1jmjuoAU_nCudDpD9YqeXXQ" target="_blank" rel="external">商务经济统计学</a></p></li><li><p>2，<a href="https://pan.baidu.com/s/1PZFRFbyfArmePnoNjlk7Vw" target="_blank" rel="external">周志华机器学习</a></p></li><li><p>3，<a href="https://pan.baidu.com/s/1dNLlg8uCRKl5E22D6XnlXw" target="_blank" rel="external">李航统计学习方法</a></p></li><li><p>4，<a href="https://pan.baidu.com/s/1gBqm7rnU6qjxgmevEOsirg" target="_blank" rel="external">数据挖掘概念与技术</a></p></li><li><p>5，备手数学书籍以便随时补充遗忘或者是不懂的相关的知识。</p></li></ul><blockquote><p>暂时记得这么多，届时补充。视频书籍交叉看最好，记得做笔记。现在的首要任务是搞清楚概念理论以及出现了一系列问题该如何使用选择。</p></blockquote><h1 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h1><p>自己找一些项目做做练手。最好是根据自身的需求，明者自明，话不多说。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时说这么多吧，以后看时间看需要再进行补充。这是一篇简易的机器学习入门指南。</p><p><strong>补充：</strong>这个指南可能不适合你，因为我确确实实是有过一点点准备才开始的这个计划流程…</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;老早就想写下这一篇文章了，对我来说这个意义很大。&lt;/p&gt;
&lt;p&gt;以下是我开始真正学习机器学习的入门经历，在这个过程中我感到异常的轻松(在仅仅是了解学习机器学习知识的过程中)，为何说是“真正的”开始学习呢？因为之前有过接触但是进度很慢…我相信有许多的人在选择如何入门的时候肯定
      
    
    </summary>
    
      <category term="机器学习" scheme="https://liujunjie11.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="https://liujunjie11.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>接受“大和”？</title>
    <link href="https://liujunjie11.github.io/2018/09/15/%E6%8E%A5%E5%8F%97%E2%80%9C%E5%A4%A7%E5%92%8C%E2%80%9D%EF%BC%9F/"/>
    <id>https://liujunjie11.github.io/2018/09/15/接受“大和”？/</id>
    <published>2018-09-15T02:02:29.000Z</published>
    <updated>2018-09-15T02:30:12.454Z</updated>
    
    <content type="html"><![CDATA[<p>不知不觉，自身的思想发生了一些变化，这种变化已维持好久了。</p><p>什么时候，曾经有些玩世不恭，对于什么事都“满腔热血”的我开始变得有些动摇了，开始变得接受这世界的“大同”思维了，我也因此而麻木了好许长的时间了。以“大同”思维来说服自己，让自己不再“焦虑”，这是我变化的根本啊。</p><p>今日忽地觉醒了，今日的我真的与从前的我在思维上有了很大的不同，在接受“大同”的抉择上我开始了质疑，是的，我承认因此我变得有些冷漠有些麻木了，我也因此付出了代价，变成了这世界千千万万麻木不仁者其中一员…我感到落寞。</p><p>我还记得这种思维是我在接触所谓哲学类书籍所产生的，开始以“世间普遍”来镇压着我的各种焦虑与猜疑直至今日此时此刻。由不堪变成了柔和甚至是一而再再而三的所谓的”理解“，我以为是我成长了，以为是我长大了…如今在此重新思考此类问题，我有些话想说。</p><p><strong>成长是变得越来越愿意接受这世间的“大同”，但若是把握的不好，却是会变成认同这种“大同”，这是两个完全不同的抉择。</strong>而曾经的我就陷入了后者之中。</p><p><strong>究竟是我选择认同了“大同”，还是“大同”说服了我？</strong>我想这两者均有在不同时期交叉出现过，我从此也慢慢变得落寞了…</p><p><strong>“大同”使我慢慢的愿意接受平庸！这是铁的事实，再者接受这世俗的说法，容易染上各种各样的颜色…我，终究还是太年轻了啊…</strong></p><p>有一段时间，我没有把本心守护好，这是我最大的过失，我也因此付出了巨大的代价。是“安乐”？是“平庸世俗”？说到底不过是我意志上的欠缺罢了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知不觉，自身的思想发生了一些变化，这种变化已维持好久了。&lt;/p&gt;
&lt;p&gt;什么时候，曾经有些玩世不恭，对于什么事都“满腔热血”的我开始变得有些动摇了，开始变得接受这世界的“大同”思维了，我也因此而麻木了好许长的时间了。以“大同”思维来说服自己，让自己不再“焦虑”，这是我变化
      
    
    </summary>
    
      <category term="生活笔记" scheme="https://liujunjie11.github.io/categories/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="生活笔记" scheme="https://liujunjie11.github.io/tags/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于错误Error: Permission denied @ dir_s_mkdir - /usr/local/Frameworks</title>
    <link href="https://liujunjie11.github.io/2018/09/07/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFError-Permission-denied-dir-s-mkdir-usr-local-Frameworks/"/>
    <id>https://liujunjie11.github.io/2018/09/07/关于错误Error-Permission-denied-dir-s-mkdir-usr-local-Frameworks/</id>
    <published>2018-09-07T00:49:53.000Z</published>
    <updated>2018-09-07T01:12:44.616Z</updated>
    
    <content type="html"><![CDATA[<p>最近在用<em>homebrew</em>下载东西遇到了如下错误：</p><blockquote><p>Error: Permission denied @ dir_s_mkdir - /usr/local/Frameworks</p></blockquote><p><strong>解决方案：</strong></p><p>依次使用命令行：</p><ol><li><blockquote><p>sudo mkdir /usr/local/Frameworks</p></blockquote></li><li><blockquote><p>sudo chown $(whoami):admin /usr/local/Frameworks</p></blockquote></li></ol><p>这样重新使用之前的命令行即可正常行使了。</p><ul><li>参考：<a href="https://github.com/Homebrew/homebrew-core/issues/19286" target="_blank" rel="external">https://github.com/Homebrew/homebrew-core/issues/19286</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在用&lt;em&gt;homebrew&lt;/em&gt;下载东西遇到了如下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: Permission denied @ dir_s_mkdir - /usr/local/Frameworks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="解决方案" scheme="https://liujunjie11.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="解决方案" scheme="https://liujunjie11.github.io/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>duet display在升级Macos 13.6之后崩溃的可行解决方法</title>
    <link href="https://liujunjie11.github.io/2018/08/31/duet-display%E5%9C%A8%E5%8D%87%E7%BA%A7Macos-13-6%E4%B9%8B%E5%90%8E%E5%B4%A9%E6%BA%83%E7%9A%84%E5%8F%AF%E8%A1%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://liujunjie11.github.io/2018/08/31/duet-display在升级Macos-13-6之后崩溃的可行解决方法/</id>
    <published>2018-08-31T13:38:40.000Z</published>
    <updated>2018-08-31T14:00:45.362Z</updated>
    
    <content type="html"><![CDATA[<p>下午看见<em>app store</em>里有更新系统的提示，心里想着好久未曾更新过哥的<em>mac</em>系统了，之前一直怕升级有什么毛病，就一直停留在<em>13.1</em>的系统。结果一升级悲剧了，哥昨天刚刚买的<em>duet display</em>一打开不显灵了…妈个鸡…</p><p>想过换回以前的系统，懒得搞了，麻烦…</p><p>想过替代品，暂时找不到，另外一方面：没钱加不想花钱了…</p><p>一怒之下哥把<em>duet display</em>删除了重装。没想到效果出奇的好：</p><blockquote><p><strong>软件可以正常使用了，不过就是在iPad上的显示不是全屏了，多了下面的一大条黑边，但是功能是和以前一样的，没区别。</strong></p></blockquote><p>下面简单说说解决方案：</p><ul><li>1、重装软件，仅<em>Mac端</em>；</li><li>2、在连接之后，顶部出现下边的镜像设置，如下设置：</li></ul><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.07.png" alt=""></p><ul><li>3、在<em>duet</em>软件点击<em>高级设置</em>，如下设置：</li></ul><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.28.png" alt=""></p><blockquote><p>不取消这个<em>镜像小勾勾</em>则永远不会成功！不然就是一系列的软件闪退！<strong>亲生经历，请勿模仿！！</strong></p></blockquote><ul><li>4、连接上之后在<em>偏好系统</em>中的<em>显示器</em>设置界面的<em>排列</em>如下设置：</li></ul><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.39.png" alt=""></p><blockquote><p>根据自身情况将扩展屏设置放在左边或者是右边，即达到一个鼠标可以自由通行的效果。</p></blockquote><p>就这样吧，软件虽然界面变小了一圈，但是也能接受。</p><p>还是那么流畅，还是那么好用，还是那么美滋滋～～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下午看见&lt;em&gt;app store&lt;/em&gt;里有更新系统的提示，心里想着好久未曾更新过哥的&lt;em&gt;mac&lt;/em&gt;系统了，之前一直怕升级有什么毛病，就一直停留在&lt;em&gt;13.1&lt;/em&gt;的系统。结果一升级悲剧了，哥昨天刚刚买的&lt;em&gt;duet display&lt;/em&gt;一打开
      
    
    </summary>
    
      <category term="Mac教程" scheme="https://liujunjie11.github.io/categories/Mac%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Mac教程" scheme="https://liujunjie11.github.io/tags/Mac%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于错误&#39;ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.&#39;</title>
    <link href="https://liujunjie11.github.io/2018/08/20/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AF-ValueError-Found-array-with-0-sample-s-shape-0-4-while-a-minimum-of-1-is-required/"/>
    <id>https://liujunjie11.github.io/2018/08/20/关于错误-ValueError-Found-array-with-0-sample-s-shape-0-4-while-a-minimum-of-1-is-required/</id>
    <published>2018-08-20T06:17:47.000Z</published>
    <updated>2018-08-20T06:27:03.256Z</updated>
    
    <content type="html"><![CDATA[<p>在参考他人的代码时运行出现了错误：</p><blockquote><p>‘ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.’</p></blockquote><p>这是因为数据的改动造成的，本身自己所有的数据与他人的不同…</p><p><strong>解决方案：</strong></p><p><strong>在运行此相关的代码时重新运行一遍你的数据源程序(就是你的那个包涵数据源的变量的那段代码)</strong></p><p>这个解决方案对我来说是可行的。我想我说的已经够明白了吧…</p><ul><li>参考：</li></ul><blockquote><p><a href="https://www.jianshu.com/p/bbfbdedc3c1c" target="_blank" rel="external">https://www.jianshu.com/p/bbfbdedc3c1c</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在参考他人的代码时运行出现了错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‘ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.’&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
      <category term="python机器学习" scheme="https://liujunjie11.github.io/categories/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python机器学习" scheme="https://liujunjie11.github.io/tags/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>python编程map函数及as_matrix函数简明</title>
    <link href="https://liujunjie11.github.io/2018/08/17/python%E7%BC%96%E7%A8%8Bmap%E5%87%BD%E6%95%B0%E5%8F%8Aas-matrix%E5%87%BD%E6%95%B0%E7%AE%80%E6%98%8E/"/>
    <id>https://liujunjie11.github.io/2018/08/17/python编程map函数及as-matrix函数简明/</id>
    <published>2018-08-17T05:01:34.000Z</published>
    <updated>2018-08-20T09:59:52.141Z</updated>
    
    <content type="html"><![CDATA[<p>如题。</p><p><em>map函数</em>属于<em>python函数式编程</em>，具体的就不说了，可参考官网说明或者是直接看大神说明：<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00141861202544241651579c69d4399a9aa135afef28c44000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00141861202544241651579c69d4399a9aa135afef28c44000</a></p><p>在此简要说说如何理解，因为之前我有一点困惑。</p><p>已知：</p><pre><code>&gt;&gt;&gt; def f(x):...     return x * x...&gt;&gt;&gt; map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])[1, 4, 9, 16, 25, 36, 49, 64, 81]</code></pre><p>那么在理解以下代码时：</p><pre><code>Title_Dict = {}#进行添加工作,将其中相关的字词以统一字词以替换Title_Dict.update(dict.fromkeys([&apos;Capt&apos;,&apos;Col&apos;,&apos;Major&apos;,&apos;Dr&apos;,&apos;Rev&apos;],&apos;Officer&apos;))Title_Dict.update(dict.fromkeys([&apos;Don&apos;,&apos;Sir&apos;,&apos;the Countess&apos;,&apos;Dona&apos;,&apos;Lady&apos;],&apos;Royalty&apos;))Title_Dict.update(dict.fromkeys([&apos;Mme&apos;,&apos;Ms&apos;,&apos;Mrs&apos;],&apos;Mrs&apos;))Title_Dict.update(dict.fromkeys([&apos;Mlle&apos;,&apos;Miss&apos;],&apos;Miss&apos;))Title_Dict.update(dict.fromkeys([&apos;Mr&apos;],&apos;Mr&apos;))Title_Dict.update(dict.fromkeys([&apos;Mme&apos;,&apos;Ms&apos;,&apos;Mrs&apos;],&apos;Master&apos;))all_data[&apos;Title&apos;] = all_data[&apos;Title&apos;].map(Title_Dict)#(在此中相当于返回了设定的值，与函数式返回类似)新建立一个列表，并且将先前统一好的代入进行整体分类sns.barplot(x=&apos;Title&apos;,y=&apos;Survived&apos;,data=all_data,palette=&apos;Set2&apos;)</code></pre><p>可以简单的理解为一个函数：</p><pre><code>if [&apos;Capt&apos;,&apos;Col&apos;,&apos;Major&apos;,&apos;Dr&apos;,&apos;Rev&apos;]:    return &apos;Officer&apos;</code></pre><blockquote><p>这样在结合变量使用时就容易理解的多了～</p></blockquote><p>在说说<code>as_matrix函数</code>。</p><p>如下代码：</p><pre><code>df = pd.DataFrame(np.random.randn(3,4) ,columns=list(&apos;abcd&apos;))print (df)输出：          a         b         c         d0  0.702272  0.199382  0.590453 -0.1776941  0.692848 -1.113005 -0.373606 -0.2492162 -0.928320 -0.920277  0.804570 -0.383224print (df.values)输出：[[ 0.70227209  0.19938178  0.59045266 -0.17769368] [ 0.69284849 -1.11300544 -0.37360597 -0.24921559] [-0.92831955 -0.92027708  0.80457031 -0.38322414]]print (df.as_matrix(columns=None))输出：[[ 0.70227209  0.19938178  0.59045266 -0.17769368] [ 0.69284849 -1.11300544 -0.37360597 -0.24921559] [-0.92831955 -0.92027708  0.80457031 -0.38322414]]</code></pre><ul><li>参考代码来源：<a href="https://blog.csdn.net/yan456jie/article/details/52089128" target="_blank" rel="external">https://blog.csdn.net/yan456jie/article/details/52089128</a></li></ul><blockquote><p>实际上两者的转换就如同有无特征名称之间的来来往往…</p></blockquote><p>之前有些困惑，现在简单理解了一点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如题。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;map函数&lt;/em&gt;属于&lt;em&gt;python函数式编程&lt;/em&gt;，具体的就不说了，可参考官网说明或者是直接看大神说明：&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/001374738125095c955c1
      
    
    </summary>
    
      <category term="python编程" scheme="https://liujunjie11.github.io/categories/python%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python编程" scheme="https://liujunjie11.github.io/tags/python%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>pandas.Series.str.get()的简单使用</title>
    <link href="https://liujunjie11.github.io/2018/08/16/pandas-Series-str-get-%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://liujunjie11.github.io/2018/08/16/pandas-Series-str-get-的简单使用/</id>
    <published>2018-08-16T11:34:16.000Z</published>
    <updated>2018-08-20T10:02:08.858Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于这个函数可在官网找到：<br><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get.html" target="_blank" rel="external">https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get.html</a></p></blockquote><p>实际上我在此只是起到一个翻译的作用…</p><p>这个函数语法如下：</p><p><code>Series.str.get(i)</code></p><blockquote><p>其中：</p><p>Parameters:    <code>i : int类型输入</code>，用于返回制定元素的一个位置(可理解为一个针对自身元素身上的一个索引)</p><p>Returns:<br>items : <code>Series/Index of objects</code>，即返回的数据类型</p></blockquote><p>具体使用参考官网上的例子：</p><pre><code>&gt;&gt;&gt; s = pd.Series([&quot;String&quot;,           (1, 2, 3),           [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;],           123, -456,           {1:&quot;Hello&quot;, &quot;2&quot;:&quot;World&quot;}])&gt;&gt;&gt; s0                        String1                     (1, 2, 3)2                     [a, b, c]3                           1234                          -4565    {1: &apos;Hello&apos;, &apos;2&apos;: &apos;World&apos;}dtype: object&gt;&gt;&gt; s.str.get(1)0        t1        22        b3      NaN4      NaN5    Hellodtype: object&gt;&gt;&gt; s.str.get(-1)0      g1      32      c3    NaN4    NaN5    NaNdtype: object</code></pre><p>好了就这样吧，记录这个是因为有预感以后会再次用到…</p><p>在此也简单的记录一下在<em>pandas</em>中的聚合<em>groupby</em>函数：</p><blockquote><p>可简单的理解为聚合的部分变成了索引，之后的操作均是围绕着这些个被聚合的数转。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;关于这个函数可在官网找到：&lt;br&gt;&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get.html&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="python编程" scheme="https://liujunjie11.github.io/categories/python%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python编程" scheme="https://liujunjie11.github.io/tags/python%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于python函数式编程以及相关调用方法的简单思考</title>
    <link href="https://liujunjie11.github.io/2018/08/16/%E5%85%B3%E4%BA%8Epython%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/"/>
    <id>https://liujunjie11.github.io/2018/08/16/关于python函数式编程以及相关调用方法的简单思考/</id>
    <published>2018-08-16T11:16:27.000Z</published>
    <updated>2018-08-16T11:26:11.856Z</updated>
    
    <content type="html"><![CDATA[<p>最近在参加<em>kaggle</em>上的一个入门级的比赛，在参考他人的代码时学习到了应用一些东西，在这里说的<em>python函数式编程</em>实际上在看书时看到了好几遍了，但是在真正的应用时是有一股“意想不到的”欣喜感的，哈哈..</p><p>在此简单记录一下，以便以后参考用。</p><p>在所谓的<em>函数式编程</em>中，若是简单的直接调用出结果那真的是大材小用了..实际上只是我认知较浅..哈哈~</p><p>在使用这些<em>函数</em>时，我发现会有惊人的效果，而且可以达到理想的效果，就如在处理一些数据中结合本身的<em>变量</em>时真的有一股得心应手的感觉～～</p><blockquote><p>这里的变量一般为<em>DataFrame</em>的数据类型，也可称为一个特征向量，维度。</p></blockquote><p>再者，如是需要以自定义的函数结合变量达到理想的效果，不妨可以试试<code>apply</code>这个方法，大胆的调用起来！真的是挺好的一个工具，哈哈。</p><p>学到了不少实用的东西～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在参加&lt;em&gt;kaggle&lt;/em&gt;上的一个入门级的比赛，在参考他人的代码时学习到了应用一些东西，在这里说的&lt;em&gt;python函数式编程&lt;/em&gt;实际上在看书时看到了好几遍了，但是在真正的应用时是有一股“意想不到的”欣喜感的，哈哈..&lt;/p&gt;
&lt;p&gt;在此简单记录一下，
      
    
    </summary>
    
      <category term="python编程" scheme="https://liujunjie11.github.io/categories/python%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python编程" scheme="https://liujunjie11.github.io/tags/python%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>为Hexo博客(next主题)加上评论功能</title>
    <link href="https://liujunjie11.github.io/2018/08/15/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2-next%E4%B8%BB%E9%A2%98-%E5%8A%A0%E4%B8%8A%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    <id>https://liujunjie11.github.io/2018/08/15/为Hexo博客-next主题-加上评论功能/</id>
    <published>2018-08-15T13:51:57.000Z</published>
    <updated>2018-09-02T05:06:57.142Z</updated>
    
    <content type="html"><![CDATA[<p>一直想加一个评论的功能，现在有时间了。</p><p>下面来说说简单的过程。</p><p>用的是<a href="https://livere.com" target="_blank" rel="external">来必力</a>这个评论系统。</p><p>首先需要进入其中进行注册。</p><blockquote><p>前面的注册过程具体参考下面这篇文章吧，但是后面的过程回来参考我的即可。</p><p>文章地址：<a href="https://segmentfault.com/a/1190000012918417" target="_blank" rel="external">https://segmentfault.com/a/1190000012918417</a></p></blockquote><p>如上面的文章可知，每个人注册成功之后会有一个独立的<code>uid</code>。</p><p>接下来打开目录位置目标<code>/Users/XX/XXXX/themes/next/_config.yml</code>，搜索关键词<code>liver</code>，将此位置改成</p><pre><code>livere:    on: true #控制开关    livere_uid: 你的uid</code></pre><p>如下图所示：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.02.45.png" alt=""></p><p><strong>接下来进行最重要的一步，打开目录位置目标<code>/Users/XX/XXXX/themes/next/layout/_partials/comments.swig</code></strong>，将其中的改成如下图所示：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%889.35.56.png" alt=""></p><p>保存之后再有顺序的使用命令：</p><p><code>hexo s -debug</code> #调试并且展示</p><p><code>hexo g -d</code> #完成文件上传生成</p><p>另外可在自己的<em>来必力</em>设置界面设置成自己想要的样子：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.05.png" alt=""></p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.11.png" alt=""></p><p>之后打开自己的网站就可以看到效果如何啦：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.40.png" alt=""></p><h1 id="参考-amp-最后"><a href="#参考-amp-最后" class="headerlink" title="参考&amp;最后"></a>参考&amp;最后</h1><p>参考：<a href="https://www.jianshu.com/p/f5c184047e72" target="_blank" rel="external">https://www.jianshu.com/p/f5c184047e72</a></p><blockquote><p>实话说，加上评论功能之后网站加载时间多了那么几毫秒…总体来说还不错。另外我用的<em>Mac</em>，其他系统也无大碍，看目录位置即可。</p></blockquote><ul><li><strong>最后补充一点:</strong></li></ul><p><strong>有时这个评论系统加载不出来，可能有几点原因：</strong></p><blockquote><ol><li>网速不行，加载过慢；</li><li>来比利系统上的<em>cookie</em>过期了，重新登陆管理界面看看；</li><li>待发掘…</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直想加一个评论的功能，现在有时间了。&lt;/p&gt;
&lt;p&gt;下面来说说简单的过程。&lt;/p&gt;
&lt;p&gt;用的是&lt;a href=&quot;https://livere.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;来必力&lt;/a&gt;这个评论系统。&lt;/p&gt;
&lt;p&gt;首先需要进入
      
    
    </summary>
    
      <category term="Hexo博客教程" scheme="https://liujunjie11.github.io/categories/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo博客教程" scheme="https://liujunjie11.github.io/tags/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>pandas.Dataframe.plot()及数值切片的一些记录</title>
    <link href="https://liujunjie11.github.io/2018/08/13/pandas-Dataframe-plot-%E5%8F%8A%E6%95%B0%E5%80%BC%E5%88%87%E7%89%87%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>https://liujunjie11.github.io/2018/08/13/pandas-Dataframe-plot-及数值切片的一些记录/</id>
    <published>2018-08-13T05:04:02.000Z</published>
    <updated>2018-08-18T04:38:27.949Z</updated>
    
    <content type="html"><![CDATA[<p>在学习其相关的一些库时有一些自己的理解，简单记录记录，方便以后理解。</p><p><code>pandas.Dataframe.plot()</code>此函数而言：</p><blockquote><p><code>x轴线</code>对应着第一列值，<code>y轴线</code>对应着第二列值or后面的列，而其中的属性对应着将要标记在上方的标签展示使用。</p></blockquote><p>在切片的理解中：</p><blockquote><p><code>[:]</code>为全体；</p><p><code>[1:]</code> or <code>[1]</code>需要考虑从0开始的顺序；</p><p><code>[:1]</code>即直接从1开始，无需从0开始；</p><p><code>[:,:]</code>表示行与列。</p><p><code>[1::]</code>表示从第二位置开始以1为跨度逐渐到最后一位(0为第一个位置)。</p><p><code>[::1]</code>表示从第一个位置开始逐渐以1为跨度直至最后一个位置。</p></blockquote><p>That’s all！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在学习其相关的一些库时有一些自己的理解，简单记录记录，方便以后理解。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pandas.Dataframe.plot()&lt;/code&gt;此函数而言：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;x轴线&lt;/code&gt;对应着第一列值，&lt;code&gt;y轴
      
    
    </summary>
    
      <category term="python数据分析/挖掘" scheme="https://liujunjie11.github.io/categories/python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E6%8C%96%E6%8E%98/"/>
    
    
      <category term="python数据分析/挖掘" scheme="https://liujunjie11.github.io/tags/python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>Mac下的matploylib绘图中文乱码问题</title>
    <link href="https://liujunjie11.github.io/2018/08/08/Mac%E4%B8%8B%E7%9A%84matploylib%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://liujunjie11.github.io/2018/08/08/Mac下的matploylib绘图中文乱码问题/</id>
    <published>2018-08-08T05:55:24.000Z</published>
    <updated>2018-08-08T06:11:46.689Z</updated>
    
    <content type="html"><![CDATA[<p>最近在接触一些在notebook上用<em>matploylib</em>这个库绘图时出现了中文乱码的问题，就是常见的那种小方块式的中文乱码问题。</p><p>下面简单说说解决方法。</p><h2 id="Mac本机上的字体册利用"><a href="#Mac本机上的字体册利用" class="headerlink" title="Mac本机上的字体册利用"></a>Mac本机上的字体册利用</h2><p>在打开<em>Mac</em>自带的字体册，可发现有许多的中文字体供我们选择使用，在此就能帮忙我们解决中文乱码的问题。</p><p>选择一个字体，找到他的文件位置在何处。之后需要添加的代码要用到。</p><p><img src="http://owudg3xs2.bkt.clouddn.com/8%E6%9C%88-08-2018%2014-10-08.gif" alt=""></p><blockquote><p>这样就知道了位置的所在。</p></blockquote><h2 id="需要添加的代码"><a href="#需要添加的代码" class="headerlink" title="需要添加的代码"></a>需要添加的代码</h2><p>如下添加代码，加上上面说的中文字体的所在位置，<strong>然后在每一次需要中文显示时，均要加上<code>fontproperties=font</code>（font即指下方的变量）。</strong></p><pre><code>from matplotlib.font_manager import FontPropertiesfont = FontProperties(fname=&apos;/Library/Fonts/Songti.ttc&apos;)&gt; 如：plt.subplot2grid((2,3),(1,0),colspan=2) #在此即为多行的占用data_train.Age[data_train.Pclass == 1].plot(kind=&apos;kde&apos;) #两者的结合绘图data_train.Age[data_train.Pclass == 2].plot(kind=&apos;kde&apos;)data_train.Age[data_train.Pclass == 3].plot(kind=&apos;kde&apos;)plt.xlabel(&apos;年龄&apos;,fontproperties=font)plt.ylabel(&apos;密度&apos;,fontproperties=font)plt.title(&apos;各等级的乘客年龄分布&apos;,fontproperties=font)plt.legend((&apos;Pclass1&apos;,&apos;Pclass2&apos;,&apos;Pclass3&apos;),loc=&apos;best&apos;) #多个说明，自动排好说明位置</code></pre><p>这样中文乱码的问题就能得到完美的解决了…唉，网上的一些方案根本没有用啊，折腾了几个小时，心累..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在接触一些在notebook上用&lt;em&gt;matploylib&lt;/em&gt;这个库绘图时出现了中文乱码的问题，就是常见的那种小方块式的中文乱码问题。&lt;/p&gt;
&lt;p&gt;下面简单说说解决方法。&lt;/p&gt;
&lt;h2 id=&quot;Mac本机上的字体册利用&quot;&gt;&lt;a href=&quot;#Mac本机上的字
      
    
    </summary>
    
      <category term="python matploylib" scheme="https://liujunjie11.github.io/categories/python-matploylib/"/>
    
    
      <category term="python matploylib" scheme="https://liujunjie11.github.io/tags/python-matploylib/"/>
    
  </entry>
  
  <entry>
    <title>python3爬虫与GUI:爬取腾讯视频</title>
    <link href="https://liujunjie11.github.io/2018/07/24/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI:%E7%88%AC%E5%8F%96%E8%85%BE%E8%AE%AF%E8%A7%86%E9%A2%91/"/>
    <id>https://liujunjie11.github.io/2018/07/24/python3爬虫与GUI:爬取腾讯视频/</id>
    <published>2018-07-24T11:21:27.000Z</published>
    <updated>2018-09-07T00:42:59.509Z</updated>
    
    <content type="html"><![CDATA[<p>最近想研究一下用<em>python爬虫</em>爬一些经常看的视频网站，其中包括有<em>腾讯视频、YouTube、Twitter</em>。本文从腾讯开始，之后会慢慢的更新其他两个的。</p><p>腾讯视频我之前就有过尝试，结果都失败了(我的目标是直接爬取完整视频！实际上这视频分析来分析去都是分段来的..)花了不少时间，结果还是停留在了只能爬取分段视频的阶段..下面也来简单说说如何爬取一些分段片段！</p><h1 id="爬取视频片段分析"><a href="#爬取视频片段分析" class="headerlink" title="爬取视频片段分析"></a>爬取视频片段分析</h1><p>在我们经过抓包的过程中可发现一些有用的信息，比如<code>getinfo</code>、<code>getkey</code>的数据包。下面简单分析一下，实际上只用到<code>getinfo</code>数据包的内容即可！</p><p>为了简便直接放出相关的链接：</p><blockquote><p><strong>getinfo:</strong><a href="http://vv.video.qq.com/getinfo?vids={}&amp;platform=101001&amp;charge=0&amp;otype=xml" target="_blank" rel="external">http://vv.video.qq.com/getinfo?vids={}&amp;platform=101001&amp;charge=0&amp;otype=xml</a></p><p><strong>getkey:</strong><a href="http://vv.video.qq.com/getkey?otype=json&amp;platform=11&amp;format={}&amp;vid={}&amp;filename={}&amp;appver=3.2.19.333" target="_blank" rel="external">http://vv.video.qq.com/getkey?otype=json&amp;platform=11&amp;format={}&amp;vid={}&amp;filename={}&amp;appver=3.2.19.333</a></p></blockquote><p><strong>再强调一下，实际上仅仅分析<code>getinfo</code>的相关的内容即可得出片段视频！</strong></p><p>随便以一个腾讯视频的<a href="https://v.qq.com/x/cover/fzfi0p4etjrckhh/a00260ipkjg.html" target="_blank" rel="external">链接</a>来进行以下图片的简单说明，针对以上的相关的参数：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.36.23.png" alt=""></p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.38.43.png" alt=""></p><blockquote><p>即：<br><a href="http://vv.video.qq.com/getinfo?vids=a00260ipkjg&amp;platform=101001&amp;charge=0&amp;otype=xml" target="_blank" rel="external">http://vv.video.qq.com/getinfo?vids=a00260ipkjg&amp;platform=101001&amp;charge=0&amp;otype=xml</a></p></blockquote><p>视频的真实地址仅仅需要<code>fn(filename)</code>、<code>fvkey(key)</code>、<code>URL(ui~url)</code>这些参数即可。以下图将一一进行标出！</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.40.07.png" alt=""></p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.40.36.png" alt=""></p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.42.42.png" alt=""></p><blockquote><p>之后将得出一片段的真实地址：<br><a href="http://218.8.55.13/vlive.qqvideo.tc.qq.com/AU8SqeoXTl1JLXdNhOFSXiMVi2va5Pws1sz4YXZ7sAxo/d002684wnon.m1.mp4?vkey=BCCD552375F7D76708838E84668FDE0E15051F1BE9FF349A31FE6CA14BDC8EAE35FEF2322A8FAEA590EB2FCB129B0C96595BB896DBB756581A9F307ADA7D259AD4371F820D6C25194FD296D3570997912221A33D6678597050700BA156442AB5CB137D70537A706F" target="_blank" rel="external">http://218.8.55.13/vlive.qqvideo.tc.qq.com/AU8SqeoXTl1JLXdNhOFSXiMVi2va5Pws1sz4YXZ7sAxo/d002684wnon.m1.mp4?vkey=BCCD552375F7D76708838E84668FDE0E15051F1BE9FF349A31FE6CA14BDC8EAE35FEF2322A8FAEA590EB2FCB129B0C96595BB896DBB756581A9F307ADA7D259AD4371F820D6C25194FD296D3570997912221A33D6678597050700BA156442AB5CB137D70537A706F</a></p></blockquote><p>只有几分钟..</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.46.32.png" alt=""></p><blockquote><p>如上..</p></blockquote><p>研究来研究去，花费了不少的时间了，再研究下去也感觉没有多大的收获了..加上感觉也难以进行下去了，所以我决定：<strong>先暂停研究，用已有的工具来满足一下～</strong>。当然也离不开用<em>python</em>来模拟爬取了，哈哈～</p><h1 id="分析模拟结合网站工具来下载完整视频"><a href="#分析模拟结合网站工具来下载完整视频" class="headerlink" title="分析模拟结合网站工具来下载完整视频"></a>分析模拟结合网站工具来下载完整视频</h1><p>经过我的研究，腾讯视频那都是一个一个片段的来进行“输出”的，所以一个一个进行爬取之后(利用网站工具)，再利用<em>python</em>的一些模块进行合并，即可获得视频的完整版。当然这些过程均将用<em>python</em>来进行模拟！</p><ul><li>使用的网站工具：<a href="http://www.weibodang.cn/dang.php" target="_blank" rel="external">http://www.weibodang.cn/dang.php</a></li></ul><p>打开此网站，输入刚刚的要下载的视频链接，点击<code>获取视频</code>之后会跳到另一个页面，会发现完整版的视频就是用几个片段分成的：</p><p><img src="http://owudg3xs2.bkt.clouddn.com/7%E6%9C%88-24-2018%2020-00-51.gif" alt=""></p><blockquote><p>腾讯这个老狗..</p></blockquote><p>如上我们已得知所有相关的片段的真实地址了，接下来将它们都下载下来后合并即可得到一个完整的视频了，网速快的话实际上跟直接下载一个完整版的视频没什么两样，可能还要快，哈哈～</p><p><strong>至此，就都已经分析完了，只剩下代码的事了。</strong></p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><strong>先说一下，这样的代码我写过太多次了..有点腻了…写不下去了，感觉总是在做一些重复的事，我就不打算写太多了，大概说一下思路吧，将各个片段下载来之后，再利用一个<em>python</em>处理视频的模块库将择好几个片段一同进行连接即可完成了。但是，貌似今天我看到好像没有分片段了？好像直接可以爬到完整版了？难道是错觉？算了，反正我也不怎么下载腾讯视频..哈哈～</strong></p><p>核心代码，剩下的代码可参考我的其他博文，自己写吧，腻死了..这段代码已经达到能够爬取到所有分片段了..</p><pre><code>`&apos;&apos;&apos;Created on 2018年7月24日@author: junjieliu&apos;&apos;&apos;&quot;&quot;&quot;函数目标：结合pyQT5界面化爬取腾讯视频编写时间：2018-7.24&quot;&quot;&quot;import time import requestsimport sysimport re from PyQt5.QtCore import QCoreApplicationfrom PyQt5.QtWidgets import (QPushButton, QWidget, QLineEdit, QTextEdit, QGridLayout, QApplication, QComboBox)from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.support.wait import WebDriverWaitfrom urllib.parse import quotefrom pyquery import PyQuery as pqbrowser = webdriver.Chrome(&apos;/Users/junjieliu/Documents/webdirver小插件/chromedriver&apos;)# 设置显示等待，超过时间返回失败，否则就地正法！wait = WebDriverWait(browser, 40)input_url = &apos;https://v.qq.com/x/cover/fzfi0p4etjrckhh/a00260ipkjg.html&apos;url = &apos;http://www.weibodang.cn/dang.php&apos;browser.get(url)input = wait.until(    EC.presence_of_element_located((By.CSS_SELECTOR, &apos;#aform &gt; div &gt; div &gt; div &gt; input&apos;)))button = wait.until(    EC.element_to_be_clickable((By.CSS_SELECTOR, &apos;#aform &gt; div &gt; div &gt; div &gt; span &gt; input&apos;)))# button = browser.find_element_by_name(&apos;check&apos;)input.clear()input.send_keys(input_url)button.click()html = browser.page_source# 直接爬取相关的内容，即播放地址，再进行一番清洗得到正确的地址referer = re.findall(r&apos;&lt;video src=&quot;(.*?)&quot;&apos;, html, re.S)for_name = re.match(r&apos;视频如下可直接播放，.*?：&quot;(.*?)&quot;&apos;, html, re.S)print(for_name)for each in referer:    results = each.replace(&apos;;&apos;, &apos;&amp;&apos;)     print(results)</code></pre><p>`</p><blockquote><p><strong>对了，GUI用的<em>pyQT5在我之前的博文也有介绍了，不说了..我承认我有点懶～</em></strong></p></blockquote><h1 id="参考-amp-最后"><a href="#参考-amp-最后" class="headerlink" title="参考&amp;最后"></a>参考&amp;最后</h1><p>一些在学习过程中用处较大的放上来了，比较懶..当然也感谢其他那些无私奉献的人们，我也从中学习到了不少的东西，谢谢～</p><p><em>1、</em><a href="https://blog.csdn.net/cplvfx/article/details/80080761" target="_blank" rel="external">https://blog.csdn.net/cplvfx/article/details/80080761</a></p><p>其中用到的一些模块不懂的还需自行去了解以及查找！</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>如今在爬取片段的那个方法可以直接爬取到腾讯以前的旧的完整的视频了，好像没有什么分片段了…方法过程如上！新的视频但是还待解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近想研究一下用&lt;em&gt;python爬虫&lt;/em&gt;爬一些经常看的视频网站，其中包括有&lt;em&gt;腾讯视频、YouTube、Twitter&lt;/em&gt;。本文从腾讯开始，之后会慢慢的更新其他两个的。&lt;/p&gt;
&lt;p&gt;腾讯视频我之前就有过尝试，结果都失败了(我的目标是直接爬取完整视频！实
      
    
    </summary>
    
      <category term="python3爬虫" scheme="https://liujunjie11.github.io/categories/python3%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python3爬虫" scheme="https://liujunjie11.github.io/tags/python3%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>心声</title>
    <link href="https://liujunjie11.github.io/2018/07/18/%E5%BF%83%E5%A3%B0/"/>
    <id>https://liujunjie11.github.io/2018/07/18/心声/</id>
    <published>2018-07-18T13:35:08.000Z</published>
    <updated>2018-07-20T03:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p>我已沉默了许久了。</p><p>直到今日我看到了一个<a href="https://www.youtube.com/watch?v=1yY0U801tUs&amp;feature=youtu.be" target="_blank" rel="external">视频链接</a>，看到了下方的一个同胞说到“我一直在流泪，孩子。”。我的心顿时在流血一般的，泪水一度忍不住的留..</p><p>现在中国的年轻一代们，你们为何不去了解政治？你们有什么理由不去了解自己国家的政治？看到身边的行尸走肉们，我有时感到一股孤独感由然而生。幸好，我并不是一个人坚持着，在世界的各个角落都有我的同胞都有人在关心着这个国家与这里的人民生活的怎么样，想到这里，我总是有一股欣慰感。</p><p>我不是什么象牙塔里的花朵，我也不想为谁辩论什么。我只是想关心我的国家，在这里，我出生在这里，在出生之后我知道我是一个中国人，我的一个“大家”叫中国，这里有我的许许多多的兄弟姐妹，大家相依为命，情同手足…这曾经是在我的梦里时常出现的幻梦，如今依旧不变着。</p><p>这里的土地应当由这里的人民来当家作主，不是从什么地方过来的二流子政权来把这里搞得民不聊生，人人自危，看看吧，如今的这片土地上，什么荒谬的事情每天都在发生，一次又一次的冲击着无数人的底线。没有最荒谬的事在这里，只有更为荒谬的。虽然主体都是人，难道就与政治没有关系？政治关系着社会人民生活的方方面面，有什么理由不关心自己国家的政治？作为一个中国人。</p><p>如今的这个国家有着一部分的人利用着这个体制获取着从多数人民身上得来的不义之财，打着各种为这个国家为人民着想的口号，吃着人血馒头，过着丝毫没有悔改，为所欲为的生活。这些人只要有存在的一天，就是这个国家最大的心患，是不必要的，需清除的寄生虫！他们带坏了整个国家社会的风气，导致一些臭味相投的人跟着这歪风，一起欺压压榨着我们的人民，有点少人因为被逼的放弃自己的底线、良知与善良？只有大家一同关注起来，一同团结起来才能将这些人绳之于法，用我们自己的真正的“法”！</p><p>作为这个国家的一份子，在有些时候就不应该继续沉默着，勇敢的发出自己的声音，与更多的那些勇敢的人民一起前进！人们也不应太过于冷漠，这个国家社会终究是我们一个个组成，大家都心怀热情，保持善良的人格，理智的并且去热衷于帮助身边需要的每一个人！当身边越来越好一些了之后，整体才会慢慢的变好。</p><p>大家一起加油！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我已沉默了许久了。&lt;/p&gt;
&lt;p&gt;直到今日我看到了一个&lt;a href=&quot;https://www.youtube.com/watch?v=1yY0U801tUs&amp;amp;feature=youtu.be&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频链接
      
    
    </summary>
    
      <category term="成长" scheme="https://liujunjie11.github.io/categories/%E6%88%90%E9%95%BF/"/>
    
    
      <category term="成长" scheme="https://liujunjie11.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>使用PS软件的记录</title>
    <link href="https://liujunjie11.github.io/2018/07/18/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>https://liujunjie11.github.io/2018/07/18/使用PS软件的记录/</id>
    <published>2018-07-18T12:45:33.000Z</published>
    <updated>2018-07-18T12:56:33.215Z</updated>
    
    <content type="html"><![CDATA[<p>此文是关于<em>PS软件</em>的使用记录，因为使用的不多，但是是经常需要用到的一些小技巧，记录在此，以便日后查看。不定时更新。</p><h1 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h1><p><em>1，</em>在软件中新建一个默认的空白层，将需要合并的图片一并拖入其中，排版调整好，保存退出，即可完成合并任务。</p><h1 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h1><blockquote><p><strong>大小水印均可去除使用。</strong></p></blockquote><p><em>1，</em><a href="https://jingyan.baidu.com/article/4ae03de3e41dd33eff9e6bb9.html" target="_blank" rel="external">https://jingyan.baidu.com/article/4ae03de3e41dd33eff9e6bb9.html</a></p><blockquote><p>看其中教程视频的第一个方法即可完成任务。</p></blockquote><p><em>2，</em><a href="https://jingyan.baidu.com/article/a24b33cd2361e819fe002bed.html" target="_blank" rel="external">https://jingyan.baidu.com/article/a24b33cd2361e819fe002bed.html</a></p><blockquote><p>不稳定方法。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此文是关于&lt;em&gt;PS软件&lt;/em&gt;的使用记录，因为使用的不多，但是是经常需要用到的一些小技巧，记录在此，以便日后查看。不定时更新。&lt;/p&gt;
&lt;h1 id=&quot;图片合并&quot;&gt;&lt;a href=&quot;#图片合并&quot; class=&quot;headerlink&quot; title=&quot;图片合并&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="软件使用" scheme="https://liujunjie11.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="软件使用" scheme="https://liujunjie11.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>反思记录</title>
    <link href="https://liujunjie11.github.io/2018/06/29/%E5%8F%8D%E6%80%9D%E8%AE%B0%E5%BD%95/"/>
    <id>https://liujunjie11.github.io/2018/06/29/反思记录/</id>
    <published>2018-06-29T06:45:18.000Z</published>
    <updated>2018-06-29T07:01:01.044Z</updated>
    
    <content type="html"><![CDATA[<p>不知不觉又已经到了期末了，现在的我在花时间应付考试。</p><p>这个学期我学了一些什么，我细细的回想一看，发现真的是太少了，最大的收获即是学习了一些<em>python爬虫</em>，但是不得不说也其实就是一半吊子罢了。所以这一切的一切真的需要我去好好的反思一下了，当中有太多的<em>三分钟热度</em>了，我的懒惰也是一大通病。我花了不少的时间去学习，到现在来看，不过也就是昙花一现，真的是太少了，学的太少了，我的学习状态出现了问题，这一点倒是无可争议的。我如今真的发现了，我的问题就是太过于“顺其自然”了，我曾经的规划计划都被我放在脑后，这真的是错误到家了…真的是让我付出了沉重的代价–太多有限的时间！</p><p><strong>更为重要的是我的自律习惯也没有曾经的那一番更加坚决了，这都是我变得懒惰的真实写照，我开始变得安于现状了，这恰恰是致命的毛病，如果不改变，我想我真的会付出更多的代价！</strong></p><p><strong>是的，我一度要求自己追求“自由”的方式去对待每一件事，但是如今的我好像真的是过度了，过度的安抚自己要“顺其自然”了…</strong></p><p>我强调并且追寻“自由”，但现在的我好像不具备太多这样的选择，我想我需要做出改变。不能太安逸去选择，更不能太安逸的去做事。</p><p>我的问题就是：<strong>太过于放纵自己了，以致于真的浪费了不少的时间！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知不觉又已经到了期末了，现在的我在花时间应付考试。&lt;/p&gt;
&lt;p&gt;这个学期我学了一些什么，我细细的回想一看，发现真的是太少了，最大的收获即是学习了一些&lt;em&gt;python爬虫&lt;/em&gt;，但是不得不说也其实就是一半吊子罢了。所以这一切的一切真的需要我去好好的反思一下了，当中
      
    
    </summary>
    
      <category term="成长" scheme="https://liujunjie11.github.io/categories/%E6%88%90%E9%95%BF/"/>
    
    
      <category term="成长" scheme="https://liujunjie11.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>Excel使用记录</title>
    <link href="https://liujunjie11.github.io/2018/06/27/Excel%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://liujunjie11.github.io/2018/06/27/Excel使用记录/</id>
    <published>2018-06-27T13:16:51.000Z</published>
    <updated>2018-06-27T13:24:42.656Z</updated>
    
    <content type="html"><![CDATA[<p>以下是我在学习<em>Excel</em>这个软件时的学习记录，以便以后方便查找，随便也希望可以帮助需要的人。不定时更新。</p><blockquote><p>所有的学习来源均来自网络。</p></blockquote><h1 id="excel整列求和的两种方法"><a href="#excel整列求和的两种方法" class="headerlink" title="excel整列求和的两种方法"></a>excel整列求和的两种方法</h1><blockquote><p><a href="http://www.ittribalwo.com/article/1324.html" target="_blank" rel="external">http://www.ittribalwo.com/article/1324.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下是我在学习&lt;em&gt;Excel&lt;/em&gt;这个软件时的学习记录，以便以后方便查找，随便也希望可以帮助需要的人。不定时更新。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所有的学习来源均来自网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;excel整列求和的两种方法&quot;
      
    
    </summary>
    
      <category term="Excel" scheme="https://liujunjie11.github.io/categories/Excel/"/>
    
    
      <category term="Excel" scheme="https://liujunjie11.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>结合Chrome插件快速下载百度云文件</title>
    <link href="https://liujunjie11.github.io/2018/06/25/%E7%BB%93%E5%90%88Chrome%E6%8F%92%E4%BB%B6%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E6%96%87%E4%BB%B6/"/>
    <id>https://liujunjie11.github.io/2018/06/25/结合Chrome插件快速下载百度云文件/</id>
    <published>2018-06-25T06:47:46.000Z</published>
    <updated>2018-06-25T07:10:00.844Z</updated>
    
    <content type="html"><![CDATA[<p>最近下载一个文件，需要用到百度云网盘，不耐烦啊，它不耐烦我肯定很烦了…</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%882.49.37.png" alt=""></p><blockquote><p>唉，坑爹的百度！</p></blockquote><p>不废话了，以下是结合<em>Chrome</em>下载的教程。</p><p><strong>具体的前面步骤看这个(懒得写重复的文字了..)：<a href="https://blog.csdn.net/fkq_2016/article/details/78759244" target="_blank" rel="external">https://blog.csdn.net/fkq_2016/article/details/78759244</a></strong></p><p>需要补充的是，其实下载这个修改版的也不错，我用的就是这个修改版的。</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.00.25.png" alt=""></p><p>在获取到了真实的地址之后我又结合经过破解之后的迅雷，哈哈哈，速度还是可以的！</p><p>关于如何复制完全真实地址，可在<em>Chrome商店</em>中下载<em>Chrome下载管理器</em>，就像下面操作图一样！</p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.05.18.png" alt=""></p><p><img src="http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.05.36.png" alt=""></p><blockquote><p>不过重中之重的问题在于，你要先能学会翻墙…</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近下载一个文件，需要用到百度云网盘，不耐烦啊，它不耐烦我肯定很烦了…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://owudg3xs2.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%2
      
    
    </summary>
    
      <category term="教程" scheme="https://liujunjie11.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://liujunjie11.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在Jupyter Notebook中安装多种语言内核</title>
    <link href="https://liujunjie11.github.io/2018/06/04/%E5%9C%A8Jupyter-Notebook%E4%B8%AD%E5%AE%89%E8%A3%85%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%E5%86%85%E6%A0%B8/"/>
    <id>https://liujunjie11.github.io/2018/06/04/在Jupyter-Notebook中安装多种语言内核/</id>
    <published>2018-06-04T12:33:26.000Z</published>
    <updated>2018-06-23T12:25:08.209Z</updated>
    
    <content type="html"><![CDATA[<p><em>Jupyter Notrbook</em>有一个好的编译界面，输出内容也一目了然，让人感觉像是发现了一个新大陆..</p><p>下面来说说如何在其中安装多种语言内核。</p><blockquote><p>支持的语言内核可查：<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels" target="_blank" rel="external">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a></p></blockquote><h1 id="安装python2内核"><a href="#安装python2内核" class="headerlink" title="安装python2内核"></a>安装<em>python2</em>内核</h1><p>因为我的默认已经安装了<em>python3</em>，所以就在此讲解一下如何安装<em>python2</em>内核。</p><ul><li>在<em>notebook</em>为开启情况下，依次输入命令：</li></ul><p><code>pip install ipykernel</code></p><p><code>python2 -m ipykernel install</code></p><blockquote><p>参考：<a href="https://www.jianshu.com/p/8b90c2f12856" target="_blank" rel="external">https://www.jianshu.com/p/8b90c2f12856</a></p></blockquote><h1 id="安装R内核"><a href="#安装R内核" class="headerlink" title="安装R内核"></a>安装<em>R</em>内核</h1><p>上面的文章也有相关的介绍了。</p><p>但是在<em>anaconda</em>中一行命令即可完成下载：</p><p><code>conda install r-essential</code></p><p>或者是</p><p><code>conda  install -c r r-essentials</code></p><blockquote><p>参考：<a href="https://kangliping.wordpress.com/2017/09/15/anaconda_r/" target="_blank" rel="external">https://kangliping.wordpress.com/2017/09/15/anaconda_r/</a></p></blockquote><p><strong>下载第一次可能有几个包不成功，我经过重新输入命令行之后再次下载得到了解决。</strong></p><h1 id="安装bash内核"><a href="#安装bash内核" class="headerlink" title="安装bash内核"></a>安装<em>bash</em>内核</h1><p>新开一个终端，依次使用命令行：</p><p><code>pip install bash_kernel</code></p><p><code>python -m bash_kernel.install</code></p><blockquote><p>参考：<a href="https://blog.csdn.net/SA14023053/article/details/52053649" target="_blank" rel="external">https://blog.csdn.net/SA14023053/article/details/52053649</a></p></blockquote><h1 id="安装基于Scala的spark应用"><a href="#安装基于Scala的spark应用" class="headerlink" title="安装基于Scala的spark应用"></a>安装基于<em>Scala</em>的<em>spark</em>应用</h1><blockquote><p>具体移步：<a href="https://blog.csdn.net/Xmo_jiao/article/details/72674687" target="_blank" rel="external">https://blog.csdn.net/Xmo_jiao/article/details/72674687</a></p></blockquote><p>其中需要的内容在<em>spark</em>启动页面中都能找到。没办法，内容太多，又懒得写..</p><p><strong>但是需要注意的每次均要启动spark再进行进一步的编程操作。在已经安装<em>spark</em>的前提下输入命令行：<code>spark-shell</code>启动spark。</strong></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>输入以下命令行查看已安装的内核列表：</p><p><code>jupyter kernelspec list</code></p><p>先写这么多，以后有需要再进行补充。</p><p><strong>关于在下载完之后发现启动内核失败(dead kernel的情况)</strong></p><p>可参考以下链接：</p><ol><li><p><a href="https://blog.csdn.net/liangdagongjue/article/details/79533538" target="_blank" rel="external">https://blog.csdn.net/liangdagongjue/article/details/79533538</a></p></li><li><p><a href="https://blog.csdn.net/wobeatit/article/details/78885339" target="_blank" rel="external">https://blog.csdn.net/wobeatit/article/details/78885339</a></p></li></ol><blockquote><p>即实际上就是我将<em>Anaconda</em>升级之后出现了以上的<code>dead kernel</code>的情况，后来发现真的是软件更新没有跟上的问题，将<em>notebook</em>之类的一并更新一遍即可解决。</p></blockquote><p>实际使用命令行如下：</p><p><code>conda upgrade notebook</code></p><p><code>conda upgrade jupyter</code></p><p><code>conda update mkl</code></p><p>一并更新之后重新打开会发现一切都可以正常使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;Jupyter Notrbook&lt;/em&gt;有一个好的编译界面，输出内容也一目了然，让人感觉像是发现了一个新大陆..&lt;/p&gt;
&lt;p&gt;下面来说说如何在其中安装多种语言内核。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持的语言内核可查：&lt;a href=&quot;https://g
      
    
    </summary>
    
      <category term="Notebook" scheme="https://liujunjie11.github.io/categories/Notebook/"/>
    
    
      <category term="Notebook" scheme="https://liujunjie11.github.io/tags/Notebook/"/>
    
  </entry>
  
  <entry>
    <title>Mac下载2018CAD破解</title>
    <link href="https://liujunjie11.github.io/2018/05/29/Mac%E4%B8%8B%E8%BD%BD2018CAD%E7%A0%B4%E8%A7%A3/"/>
    <id>https://liujunjie11.github.io/2018/05/29/Mac下载2018CAD破解/</id>
    <published>2018-05-29T11:25:20.000Z</published>
    <updated>2018-05-29T11:30:49.404Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为选修课要用到<em>CAD</em>，用的恰好是<em>Mac book</em>，就在此记录</p><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>先去官网下载好2018的试用版：<a href="https://www.autodesk.com.cn/products/autocad/free-trial#0" target="_blank" rel="external">https://www.autodesk.com.cn/products/autocad/free-trial#0</a></p><blockquote><p><strong>需要注意的是：选择企业注册就好，不然很麻烦…</strong></p></blockquote><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><h2 id="参考以下文章即可"><a href="#参考以下文章即可" class="headerlink" title="参考以下文章即可.."></a>参考以下文章即可..</h2><ul><li>参考：<a href="http://www.anyxz.com/index.php/2902.html" target="_blank" rel="external">http://www.anyxz.com/index.php/2902.html</a></li></ul><blockquote><p>因为我只是完成作业就卸载了..所以一个试用版就足够..</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近因为选修课要用到&lt;em&gt;CAD&lt;/em&gt;，用的恰好是&lt;em&gt;Mac book&lt;/em&gt;，就在此记录&lt;/p&gt;
&lt;h1 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h1&gt;&lt;h2 id=&quot;下载
      
    
    </summary>
    
      <category term="Mac软件教程" scheme="https://liujunjie11.github.io/categories/Mac%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Mac软件教程" scheme="https://liujunjie11.github.io/tags/Mac%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>理解常用传统算法的合集资源总结</title>
    <link href="https://liujunjie11.github.io/2018/05/10/%E7%90%86%E8%A7%A3%E5%B8%B8%E7%94%A8%E4%BC%A0%E7%BB%9F%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%88%E9%9B%86%E8%B5%84%E6%BA%90%E6%80%BB%E7%BB%93/"/>
    <id>https://liujunjie11.github.io/2018/05/10/理解常用传统算法的合集资源总结/</id>
    <published>2018-05-10T13:13:35.000Z</published>
    <updated>2018-05-14T09:22:26.636Z</updated>
    
    <content type="html"><![CDATA[<p>平时学习算法是为了理解其中的原理以及思想，另外还有各种算法之间的比较以及应用场景。下面是一些常用常见的传统算法，我在<em>YouTube</em>上找了一些可简单理解其原理思想的视频，真正的做到通俗易懂！</p><p>另外关于算法的各种时间复杂度以及空间复杂度均在此小列出来。关于以下各种算法的应用场景实际上还是需要自己去结合这些算法的思想去选择的，就不在此多说了。</p><blockquote><p>参考了许多的网页，包括<em>YouTube</em>，<em>维基百科</em>等灯，也从中学习到了许多，就是在此汇总一下。<strong>另外参考的网页就不一一列出来了，感谢他们/她们的付出与分享。</strong></p></blockquote><p><strong>主要参考：</strong></p><ul><li><p><a href="http://wiki.jikexueyuan.com/project/data-structure-sorting/insertion-sort.html" target="_blank" rel="external">http://wiki.jikexueyuan.com/project/data-structure-sorting/insertion-sort.html</a></p></li><li><p><a href="https://github.com/francistao/LearningNotes/blob/master/Part3/Algorithm/Sort/面试中的%2010%20大排序算法总结.md" target="_blank" rel="external">https://github.com/francistao/LearningNotes/blob/master/Part3/Algorithm/Sort/面试中的%2010%20大排序算法总结.md</a></p></li><li><p>常用排序算法总结(一):<a href="http://www.cnblogs.com/eniac12/p/5329396.html" target="_blank" rel="external">http://www.cnblogs.com/eniac12/p/5329396.html</a></p></li><li><p>常用排序算法总结(二):<a href="http://www.cnblogs.com/eniac12/p/5332117.html" target="_blank" rel="external">http://www.cnblogs.com/eniac12/p/5332117.html</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平时学习算法是为了理解其中的原理以及思想，另外还有各种算法之间的比较以及应用场景。下面是一些常用常见的传统算法，我在&lt;em&gt;YouTube&lt;/em&gt;上找了一些可简单理解其原理思想的视频，真正的做到通俗易懂！&lt;/p&gt;
&lt;p&gt;另外关于算法的各种时间复杂度以及空间复杂度均在此小列
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://liujunjie11.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="https://liujunjie11.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
