<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LXiHa`Notes</title>
  
  <subtitle>The House Belong to Love and Freedom.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liujunjie11.github.io/"/>
  <updated>2020-09-02T09:01:34.590Z</updated>
  <id>https://liujunjie11.github.io/</id>
  
  <author>
    <name>刘俊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小黑屋的猜想</title>
    <link href="https://liujunjie11.github.io/2020/09/02/%E5%B0%8F%E9%BB%91%E5%B1%8B%E7%9A%84%E7%8C%9C%E6%83%B3/"/>
    <id>https://liujunjie11.github.io/2020/09/02/小黑屋的猜想/</id>
    <published>2020-09-02T08:18:39.000Z</published>
    <updated>2020-09-02T09:01:34.590Z</updated>
    
    <content type="html"><![CDATA[<p>最近在观看一些人性生理的视频之后，有了一个猜想：即若是人生来关在一个与世隔绝的地方(我暂且把这地方比喻成一个小黑屋)，但这地方除此人之外别无他人以及任何现代设施，一切保持原始的自然模样。那么，这个人的最终思想会发展成什么样子？</p><a id="more"></a><p>于我而言，以我为出发点的，言不由衷的想到两性关系的现实现象。总是因为为了解决一系列的需求而去接触一些相关的知识，从而满足好奇，亦或者是说为了填补无处安放的欲望空洞。比如为了解决性生理需求，面对异性时，久而久之居然会出现所谓的“邪淫”残影。对于这种情况，总是会有一番“欲求不满”“走火入魔”的说辞，但也显得无力且荒谬了，不妨直接称之为世俗之见。从而我将其放大至整个人际社会，一切很多的情况却与之可相提并论。那么，如果一个人从出生以来便与世隔绝，会发展成什么样呢？这时不免想到“人之初，性本善本恶”的命题，但在我的这个猜想里，这样的命题更像是一种伪命题，因为我所探究的、想要获取的答案里远比这个命题更有开放性以及鲁棒性。</p><p>不得不说，如今的人们都是因为在接触人际社会这个群体，不断获取亦或者是刷新自我认知的一个过程，从认知到学习模仿，进而不断积累形成自我意识的一个思想成长过程。如果抛开这一切，回归到比原始社会更为清净的地方，没有其他动物所在，仅仅是一个可以让人衣食无忧的前提下，那么，一个人出生在这种地方，这个人会是形成什么样的思想思维呢？让我好奇不已。臆想到当初有过所谓的“狼孩”，但仔细一想，不过也是受到了生存环境的影响罢了，而我的假设，却只是在已有衣食无忧并且没有动物存在的前提下的“小黑屋”。当然，若是假设回到原始森林的人际社会，那么，人肯定会变得与野兽无异，当然，如今的这种社会确实也是如此…不过也是另一个话题了…</p><p>思量再思量，或许这种猜想只能永远存在我的猜想里了，我也根本想象不出答案。只能在此基础上再做假设，这个“小黑屋”的衣食无忧的资源是有限的，那么无疑这个人也会慢慢变成一个为生计而发愁的人。如果说，再以原有假设，源源不断的衣食无忧可提供的前提下，那么这个人或许只是被生理需求所支配的行尸走肉罢了？这样的说辞或许更为准确。联想到有时认为“文化”的存在是一种祸害，这样的想法或许显得极端了，一种存在的东西必然有两面性。</p><p>结论：会变成被生理需求支配的行尸走肉。但这样的生活在如今恐怕也是许多人的目标之一吧…但亦取决于个体罢了。仔细揣摩，或许很多的现存的一些观念以及精神文化，或许真的为人们塑造了更为多姿多彩的目标，正是如此，世界也变得绚丽多彩起来。</p><p>此时联想到自身进退两难的退意，显得有些另类了…或许，工作会给自身带来一定的安心，不谈周围世事人事束缚，至少也是为了自己能安稳的活着罢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在观看一些人性生理的视频之后，有了一个猜想：即若是人生来关在一个与世隔绝的地方(我暂且把这地方比喻成一个小黑屋)，但这地方除此人之外别无他人以及任何现代设施，一切保持原始的自然模样。那么，这个人的最终思想会发展成什么样子？&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>什么样的自我</title>
    <link href="https://liujunjie11.github.io/2020/07/28/%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%87%AA%E6%88%91/"/>
    <id>https://liujunjie11.github.io/2020/07/28/什么样的自我/</id>
    <published>2020-07-27T16:13:56.000Z</published>
    <updated>2020-07-27T16:23:36.045Z</updated>
    
    <content type="html"><![CDATA[<p>妈妈有小病住院，在今日还动了手术，而我没有去陪伴她，下午兄长打电话过来，说妈妈哭了，感觉她心情很不好，我顿时也感觉自己的浅薄与可笑。</p><a id="more"></a><p>有时我一直以自我的要求去看待事物与周围的人事，并且一直以不拘小情来鞭策自己，但却面对于未曾结识之人的一丝情意与馈赠，一味的想着报恩抱德，平时也总是以“以德报怨”“有血有肉”来说服自己并且鞭策自己，不想如今面对于父母的大恩大德，我又是这般狼狈可笑的模样。</p><p>一面以所谓的自我来试图说服自己，又一面刻意抵制传统的会意，却不想啊却不想我那时刻躺在病床上无助且脆弱的母亲…我是个不折不扣的混蛋罢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;妈妈有小病住院，在今日还动了手术，而我没有去陪伴她，下午兄长打电话过来，说妈妈哭了，感觉她心情很不好，我顿时也感觉自己的浅薄与可笑。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>医院</title>
    <link href="https://liujunjie11.github.io/2020/07/21/%E5%8C%BB%E9%99%A2/"/>
    <id>https://liujunjie11.github.io/2020/07/21/医院/</id>
    <published>2020-07-21T09:41:07.000Z</published>
    <updated>2020-07-21T09:56:26.437Z</updated>
    
    <content type="html"><![CDATA[<p>今天爹爹身体不舒服，小爷请假和我一起陪同他老人家去了一趟市医院。</p><a id="more"></a><p>时隔差不多半年，从过年那段时间自己执意要回来，现今回去已是初夏了。回去的路上，一片生机勃勃的景象，春意盎然的一片绿油油，加以自然的点缀之下，但却与潮湿的空气以及村子里人气无处可寻的环境形成了强烈的反差。我最为难以忍受这样的环境，让人憋屈，无数次梦里出现的场景却展现在我眼前，让我难忘。</p><p>走进市区医院的大门，已是早上七点钟了。但在医院这个地方，依旧不缺少所谓的人气，至少在我进去到离开，人来人往一直都是络绎不绝的。其中的包括各年龄段的、各式各样的人，却做着同样的事：挂号、付费、检查。之后方才走上爬楼寻医的路。</p><p>这次去医院与以往不同，给我的感觉更为强烈，人的生命真的如草芥一般，太过于脆弱了，但相较于生命，其余在人世间的东西又有多重要呢。或许有吧，我也不愿再去多想。</p><p>今天有意无意望着爹爹，感觉他老人家还是长得跟以前一样，走路也是潇洒自如，但他老人家脱了帽子之后，却也少了些许过往那般的年轻的气息了…</p><p>愿家里的两位老人家长命百岁。也祝愿天下老人家老有所依，身体健康。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天爹爹身体不舒服，小爷请假和我一起陪同他老人家去了一趟市医院。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>什么夜什么思</title>
    <link href="https://liujunjie11.github.io/2020/07/21/%E4%BB%80%E4%B9%88%E5%A4%9C%E4%BB%80%E4%B9%88%E6%80%9D/"/>
    <id>https://liujunjie11.github.io/2020/07/21/什么夜什么思/</id>
    <published>2020-07-21T09:21:33.000Z</published>
    <updated>2020-07-21T09:40:37.572Z</updated>
    
    <content type="html"><![CDATA[<p>不明白且疑惑，在宁静的夜空下，居然再次泛起心里无数遐想，过去多时了。</p><a id="more"></a><p>想来却也觉得可笑，不过是一段充斥着百无聊赖的荒芜岁月罢了，一段所谓的网络情缘，我却为此昏了头，想想也觉得可笑。两头都是爱空想的幻想家，我一直以为自己无比理智，无懈可击，可在面对与感情，却也不过一盘散沙罢了。如今面对这样的结局，或许是冥冥中的天意？还是自古已有的报应？…我却也不好琢磨，只能责怪于那该死的机缘不对吧…但经过此次回望过去的自己，不妨也记得给那个女孩带来的巨大伤害，我却不以为然，这是对贸然开始的感情的惩罚吗，却也不过是为自己的罪行开脱罢了。呵，面对于如今自己这幅模样，慢慢的亦开始厌恶起来，我做的事太过分却不自知，唯有忏悔，唯有为自己的罪行不断开脱寻找借口罢了。</p><p>相较于这段所谓的网络情缘，却也不自觉的想偷笑。自己喜欢的究竟是什么，在最后也一览无余，我不过是一个污秽不堪的混蛋罢了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不明白且疑惑，在宁静的夜空下，居然再次泛起心里无数遐想，过去多时了。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV Python版本错误</title>
    <link href="https://liujunjie11.github.io/2020/05/28/OpenCV%20Python%E7%89%88%E6%9C%AC%E9%94%99%E8%AF%AF/"/>
    <id>https://liujunjie11.github.io/2020/05/28/OpenCV Python版本错误/</id>
    <published>2020-05-27T19:56:24.000Z</published>
    <updated>2020-05-27T20:08:13.043Z</updated>
    
    <content type="html"><![CDATA[<p>出现的错误描述：<code>cv2.error: OpenCV(4.2.0) /Users/travis/build/skvark/opencv-python/opencv/modules/imgproc/src/shapedescr.cpp:315: error: (-215:Assertion failed) npoints &gt;= 0 &amp;&amp; (depth == CV_32F || depth == CV_32S) in function &#39;contourArea&#39;</code>。</p><a id="more"></a><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p><code>OpenCV-python</code>的版本问题所导致，可适当将现有的版本进行降低再进行尝试。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;出现的错误描述：&lt;code&gt;cv2.error: OpenCV(4.2.0) /Users/travis/build/skvark/opencv-python/opencv/modules/imgproc/src/shapedescr.cpp:315: error: (-215:Assertion failed) npoints &amp;gt;= 0 &amp;amp;&amp;amp; (depth == CV_32F || depth == CV_32S) in function &amp;#39;contourArea&amp;#39;&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
      <category term="OpenCV" scheme="https://liujunjie11.github.io/categories/OpenCV/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
      <category term="OpenCV" scheme="https://liujunjie11.github.io/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>Python中导入包的问题</title>
    <link href="https://liujunjie11.github.io/2020/05/28/Python%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%8C%85%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://liujunjie11.github.io/2020/05/28/Python中导入包的问题/</id>
    <published>2020-05-27T18:50:38.000Z</published>
    <updated>2020-05-27T18:58:06.729Z</updated>
    
    <content type="html"><![CDATA[<p>解决的问题描述：<code>ModuleNotFoundError: No module named &#39;&#39;; &#39;&#39; is not a package</code>。</p><a id="more"></a><p>在GitHub上下载的一段代码运行出现导入包的错误，如本身有个<code>code</code>的包，其中包含的函数我使用了<code>code.A</code>(代码import code.A)，结果出现了以下错误：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ModuleNotFoundError: No module named <span class="string">'code'</span>; <span class="string">'code'</span> <span class="keyword">is</span> <span class="keyword">not</span> a package</div></pre></td></tr></table></figure><p>后来在eclipse上重新新建了一个Python包，新建的包下边均会出现一个<code>__init__.py</code>，我把这个<code>__init__.py</code>复制了一份，粘贴在了以上出现问题的包中，发现可以正常运行了。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>新建一个<code>__init__.py</code>即可。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://blog.51cto.com/2338053/1982977" target="_blank" rel="external">你所不知道的 【ModuleNotFoundError: No module named ‘’; ‘’ is not a package】</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决的问题描述：&lt;code&gt;ModuleNotFoundError: No module named &amp;#39;&amp;#39;; &amp;#39;&amp;#39; is not a package&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>python pip常用命令</title>
    <link href="https://liujunjie11.github.io/2020/05/27/python%20pip%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://liujunjie11.github.io/2020/05/27/python pip常用命令/</id>
    <published>2020-05-27T07:27:10.000Z</published>
    <updated>2020-05-27T18:52:00.339Z</updated>
    
    <content type="html"><![CDATA[<p>最近使用的<code>pip</code>模块的简单记录。</p><a id="more"></a><h1 id="升级pip"><a href="#升级pip" class="headerlink" title="升级pip"></a>升级pip</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install --upgrade pip</div></pre></td></tr></table></figure><h1 id="pip使用"><a href="#pip使用" class="headerlink" title="pip使用"></a>pip使用</h1><h2 id="pip安装包"><a href="#pip安装包" class="headerlink" title="pip安装包"></a>pip安装包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install 安装包名</div></pre></td></tr></table></figure><h2 id="pip安装指定版本包"><a href="#pip安装指定版本包" class="headerlink" title="pip安装指定版本包"></a>pip安装指定版本包</h2><p>指定版本，使用<code>==</code>操作符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install tensorflow(包名) == <span class="number">1.13</span><span class="number">.1</span></div></pre></td></tr></table></figure><h2 id="pip查看是否已安装"><a href="#pip查看是否已安装" class="headerlink" title="pip查看是否已安装"></a>pip查看是否已安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip show --files 安装包名</div></pre></td></tr></table></figure><h2 id="pip列出所有安装的库"><a href="#pip列出所有安装的库" class="headerlink" title="pip列出所有安装的库"></a>pip列出所有安装的库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip list</div></pre></td></tr></table></figure><h2 id="pip检查哪些包需要更新"><a href="#pip检查哪些包需要更新" class="headerlink" title="pip检查哪些包需要更新"></a>pip检查哪些包需要更新</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip list --outdated</div><div class="line">pip list  --outdated --format=columns</div></pre></td></tr></table></figure><h2 id="pip升级包"><a href="#pip升级包" class="headerlink" title="pip升级包"></a>pip升级包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --upgrade 要升级的包名</div></pre></td></tr></table></figure><h2 id="pip-批量升级包"><a href="#pip-批量升级包" class="headerlink" title="pip 批量升级包"></a>pip 批量升级包</h2><p>借助<code>pip-review</code>进行包的批量升级操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install pip-review</div><div class="line">pip-review --local --interactive</div></pre></td></tr></table></figure><h2 id="可用的pip命令"><a href="#可用的pip命令" class="headerlink" title="可用的pip命令"></a>可用的pip命令</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&gt;&gt; pip --help</div><div class="line"> </div><div class="line">Usage:  </div><div class="line">pip&lt;command&gt;[options]</div><div class="line"> </div><div class="line">Commands:</div><div class="line">install                    安装包.</div><div class="line">uninstall                  卸载包.</div><div class="line">freeze                     按着一定格式输出已安装包列表</div><div class="line">list                       列出已安装包.</div><div class="line">show                       显示包详细信息.</div><div class="line">search                     搜索包，类似yum里的search.</div><div class="line">wheel                      Buildwheelsfromyourrequirements.</div><div class="line">zip                        不推荐.Zipindividualpackages.</div><div class="line">unzip                      不推荐.Unzipindividualpackages.</div><div class="line">bundle                     不推荐.Createpybundles.</div><div class="line">help                       当前帮助.</div><div class="line"> </div><div class="line">GeneralOptions:</div><div class="line">-h,--help                 显示帮助.</div><div class="line">-v,--verbose              更多的输出，最多可以使用<span class="number">3</span>次</div><div class="line">-V,--version              现实版本信息然后退出.</div><div class="line">-q,--quiet                最少的输出.</div><div class="line">--log-file&lt;path&gt;          覆盖的方式记录verbose错误日志，默认文件：/root/.pip/pip.log</div><div class="line">--log&lt;path&gt;               不覆盖记录verbose输出的日志.</div><div class="line">--proxy&lt;proxy&gt;            Specifyaproxyintheform[user:passwd@]proxy.server:port.</div><div class="line">--timeout&lt;sec&gt;            连接超时时间(默认<span class="number">15</span>秒).</div><div class="line">--exists-action&lt;action&gt;   Defaultactionwhenapathalreadyexists:(s)witch,(i)gnore,(w)ipe,(b)ackup.</div><div class="line">--cert&lt;path&gt;              证书.</div></pre></td></tr></table></figure><h1 id="pip下载过慢的解决方案"><a href="#pip下载过慢的解决方案" class="headerlink" title="pip下载过慢的解决方案"></a>pip下载过慢的解决方案</h1><p><code>pip install 安装包名 -i 镜像源</code>，提升下载/更新速度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install django -i https://pypi.tuna.tsinghua.edu.cn/simple</div></pre></td></tr></table></figure><p><code>pip</code>镜像可选项：</p><ul><li><p>清华——<br><a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="external">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p></li><li><p>中科大——<br><a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="external">https://pypi.mirrors.ustc.edu.cn/simple/</a></p></li><li><p>阿里云——<br><a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="external">https://mirrors.aliyun.com/pypi/simple/</a></p></li><li><p>豆瓣——<br><a href="http://pypi.douban.com/simple/" target="_blank" rel="external">http://pypi.douban.com/simple/</a></p></li></ul><h2 id="设为默认配置镜像"><a href="#设为默认配置镜像" class="headerlink" title="设为默认配置镜像"></a>设为默认配置镜像</h2><p>升级 pip 到最新的版本后进行配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install pip -U</div><div class="line">pip config set <span class="keyword">global</span>.index-url https://pypi.tuna.tsinghua.edu.cn/simple/</div></pre></td></tr></table></figure><p>此命令行对等于修改文件：</p><h3 id="window端"><a href="#window端" class="headerlink" title="window端"></a>window端</h3><p>在 windows 命令提示符（控制台）中，输入<code>%APPDATA%</code>，进入此目录<br>在该目录下新建名为 pip 的文件夹，然后在其中新建文件 pip.ini。（例如：”C:\Users\Administrator\AppData\Roaming\pip\pip.ini”）</p><p>在文件中填入以下内容并保存（可替换为上述不同的镜像地址）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">[install]</div><div class="line">trusted-host=pypi.douban.com</div></pre></td></tr></table></figure><h3 id="Linux-Mac："><a href="#Linux-Mac：" class="headerlink" title="Linux / Mac："></a>Linux / Mac：</h3><p>文件地址为 ~/.pip/pip.conf，其余相同。</p><h3 id="下载超时解决方案"><a href="#下载超时解决方案" class="headerlink" title="下载超时解决方案"></a>下载超时解决方案</h3><ol><li>网速波动影响，多次尝试可解决；</li><li>尝试切换<code>pip</code>源。</li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/90300861?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.nonecase" target="_blank" rel="external">python中pip安装、升级、升级指定的包</a></p></li><li><p><a href="https://blog.csdn.net/liangpingguo/article/details/105928401?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-6" target="_blank" rel="external">Python使用pip更新所有已安装包的方法</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/46975553" target="_blank" rel="external">pip下载python库太慢怎么办？</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用的&lt;code&gt;pip&lt;/code&gt;模块的简单记录。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python复习笔记</title>
    <link href="https://liujunjie11.github.io/2020/05/23/Python%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://liujunjie11.github.io/2020/05/23/Python复习笔记/</id>
    <published>2020-05-23T06:11:16.000Z</published>
    <updated>2020-05-23T13:21:54.168Z</updated>
    
    <content type="html"><![CDATA[<p>太久没动程序了，参加<a href="https://www.kaggle.com/c/competitive-data-science-predict-future-sales" target="_blank" rel="external">Kaggle:Predict Future Sales</a>，顺便将之前学的快速复习一下，在此做个摘抄笔记。</p><a id="more"></a><h1 id="Python-print-函数生成Loading…"><a href="#Python-print-函数生成Loading…" class="headerlink" title="Python print()函数生成Loading…."></a>Python print()函数生成Loading….</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>以下是 print() 方法的语法:</p><p><code>print(*objects, sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)</code></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li>objects – 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。</li><li>sep – 用来间隔多个对象，默认值是一个空格。</li><li>end – 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。</li><li>file – 要写入的文件对象。</li><li>flush – 输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line">print(<span class="string">"---RUNOOB EXAMPLE ： Loading 效果---"</span>)</div><div class="line"></div><div class="line">print(<span class="string">"Loading"</span>,end = <span class="string">""</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</div><div class="line">    print(<span class="string">"."</span>,end = <span class="string">''</span>,flush = <span class="keyword">True</span>)</div><div class="line">    time.sleep(<span class="number">0.5</span>)</div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.runoob.com/python3/python-func-print.html" target="_blank" rel="external">https://www.runoob.com/python3/python-func-print.html</a></p></blockquote><h1 id="help-函数显示自建函数说明"><a href="#help-函数显示自建函数说明" class="headerlink" title="help()函数显示自建函数说明"></a>help()函数显示自建函数说明</h1><p>看程序一目了然：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">least_difference</span><span class="params">(a, b, c)</span>:</span></div><div class="line">    diff1 = abs(a - b)</div><div class="line">    diff2 = abs(b - c)</div><div class="line">    diff3 = abs(a - c)</div><div class="line">    <span class="keyword">return</span> min(diff1, diff2, diff3)</div><div class="line">    </div><div class="line">help(least_difference)</div><div class="line">&gt;&gt;Help on function least_difference <span class="keyword">in</span> module __main__:</div><div class="line"></div><div class="line">least_difference(a, b, c)</div><div class="line"></div><div class="line"><span class="comment">#j加上函数注释</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">least_difference</span><span class="params">(a, b, c)</span>:</span></div><div class="line">    <span class="string">"""Return the smallest difference between any two numbers</span></div><div class="line"><span class="string">    among a, b and c.</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    &gt;&gt;&gt; least_difference(1, 5, -5)</span></div><div class="line"><span class="string">    4</span></div><div class="line"><span class="string">    """</span></div><div class="line">    diff1 = abs(a - b)</div><div class="line">    diff2 = abs(b - c)</div><div class="line">    diff3 = abs(a - c)</div><div class="line">    <span class="keyword">return</span> min(diff1, diff2, diff3)</div><div class="line">    </div><div class="line">help(least_difference)</div><div class="line">&gt;&gt;Help on function least_difference <span class="keyword">in</span> module __main__:</div><div class="line"></div><div class="line">least_difference(a, b, c)</div><div class="line">    Return the smallest difference between any two numbers</div><div class="line">    among a, b <span class="keyword">and</span> c.</div><div class="line">    </div><div class="line">    &gt;&gt;&gt; least_difference(<span class="number">1</span>, <span class="number">5</span>, <span class="number">-5</span>)</div><div class="line">    <span class="number">4</span></div></pre></td></tr></table></figure><blockquote><p>总结：<strong>加了注释的函数使用help()会展现说明(即函数本身注释说明)。</strong></p></blockquote><h1 id="max-函数调用自建函数"><a href="#max-函数调用自建函数" class="headerlink" title="max()函数调用自建函数"></a>max()函数调用自建函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mod_5</span><span class="params">(x)</span>:</span></div><div class="line">    <span class="string">"""Return the remainder of x after dividing by 5"""</span></div><div class="line">    <span class="keyword">return</span> x % <span class="number">5</span></div><div class="line"></div><div class="line">print(</div><div class="line">    <span class="string">'Which number is biggest?'</span>,</div><div class="line">    max(<span class="number">100</span>, <span class="number">51</span>, <span class="number">14</span>),</div><div class="line">    <span class="string">'Which number is the biggest modulo 5?'</span>,</div><div class="line">    max(<span class="number">100</span>, <span class="number">51</span>, <span class="number">14</span>, key=mod_5),</div><div class="line">    sep=<span class="string">'\n'</span>,</div><div class="line">)</div><div class="line"></div><div class="line">&gt;&gt;</div><div class="line">Which number is biggest?</div><div class="line"><span class="number">100</span></div><div class="line">Which number is the biggest modulo 5?</div><div class="line"><span class="number">14</span></div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.kaggle.com/colinmorris/functions-and-getting-help" target="_blank" rel="external">https://www.kaggle.com/colinmorris/functions-and-getting-help</a></p></blockquote><h1 id="字符串易冲突点"><a href="#字符串易冲突点" class="headerlink" title="字符串易冲突点"></a>字符串易冲突点</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">What you type...What you getexampleprint(example)</div><div class="line">\'    ''What\'s     What's up?      </div><div class="line">\<span class="string">"   "</span><span class="string">"That's \"cool\" That's "</span>cool<span class="string">"</span></div><div class="line"><span class="string">\\   \   "</span>A mountain: /\\<span class="string">"A mountain: /\</span></div><div class="line"><span class="string">\n"</span><span class="number">1</span>\n2 <span class="number">3</span><span class="string">"1</span></div><div class="line"><span class="string">    2 3</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">hello = "</span>hello\nworld<span class="string">" 对等 triplequoted_hello = "</span><span class="string">""</span>hello</div><div class="line">world<span class="string">"""</span></div></pre></td></tr></table></figure><h2 id="str-split-相反对等str-join"><a href="#str-split-相反对等str-join" class="headerlink" title="str.split()相反对等str.join()"></a>str.split()相反对等str.join()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">datestr = <span class="string">'1956-01-31'</span></div><div class="line">year, month, day = datestr.split(<span class="string">'-'</span>)</div><div class="line">&gt;&gt;</div><div class="line"><span class="number">1956</span> <span class="number">01</span> <span class="number">31</span></div><div class="line"></div><div class="line"><span class="string">'/'</span>.join([month, day, year])</div><div class="line">&gt;&gt;</div><div class="line"><span class="string">'01/31/1956'</span></div></pre></td></tr></table></figure><h2 id="str-format-多种展示方法"><a href="#str-format-多种展示方法" class="headerlink" title="str.format()多种展示方法"></a>str.format()多种展示方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#直接调用</span></div><div class="line"><span class="string">"&#123;&#125;, you'll always be the &#123;&#125;th planet to me."</span>.format(planet, position)</div><div class="line"></div><div class="line"><span class="comment">#切片调用，可配合运算符等</span></div><div class="line"><span class="string">"&#123;&#125; weighs about &#123;:.2&#125; kilograms (&#123;:.3%&#125; of Earth's mass). It is home to &#123;:,&#125; Plutonians."</span>.format(</div><div class="line">    planet, pluto_mass, pluto_mass / earth_mass, population,</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">#索引调用</span></div><div class="line">s = <span class="string">"""Pluto's a &#123;0&#125;.</span></div><div class="line"><span class="string">No, it's a &#123;1&#125;.</span></div><div class="line"><span class="string">&#123;0&#125;!</span></div><div class="line"><span class="string">&#123;1&#125;!"""</span>.format(<span class="string">'planet'</span>, <span class="string">'dwarf planet'</span>)</div><div class="line">print(s)</div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.kaggle.com/colinmorris/strings-and-dictionaries" target="_blank" rel="external">https://www.kaggle.com/colinmorris/strings-and-dictionaries</a></p></blockquote><p>待续….</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太久没动程序了，参加&lt;a href=&quot;https://www.kaggle.com/c/competitive-data-science-predict-future-sales&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kaggle:Predict Future Sales&lt;/a&gt;，顺便将之前学的快速复习一下，在此做个摘抄笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>春寒意暖</title>
    <link href="https://liujunjie11.github.io/2020/04/20/%E6%98%A5%E5%AF%92%E6%84%8F%E6%9A%96/"/>
    <id>https://liujunjie11.github.io/2020/04/20/春寒意暖/</id>
    <published>2020-04-20T15:09:26.000Z</published>
    <updated>2020-04-22T16:15:03.476Z</updated>
    
    <content type="html"><![CDATA[<p>这是个春风得意、暖意洋洋的日子。</p><a id="more"></a><p>雨过后，一股清新的新风，</p><p>一杯热气腾腾的豆奶茶，</p><p>一碗香气撩人的饺子面。</p><p>没错，还有我那嗷嗷作响的饥肠和久违为至的豁然开朗。</p><p>我想我是感觉到这种简单生活的幸福以及乐趣了，更难得的恐怕还是豁然开朗吧。</p><p>我第一时间想到了“丰衣足食”这个词，还感觉到了“衣食无忧”的罪恶感，不免又开始暗自庆幸并且暗自担忧起来。</p><p>我需要做些什么了…</p><p>这篇文章的创建是在前天，我的感受以及感想油然而生，没想到还是因为懒惰拖到了两天后的今晚，因为有着想要急切记录下来的心情，不妨就这样一遍简单拂过罢了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是个春风得意、暖意洋洋的日子。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Window10下玩《奥日与黑暗森林》（Ori and the Blind Forest）</title>
    <link href="https://liujunjie11.github.io/2020/04/20/Window10%E4%B8%8B%E7%8E%A9%E3%80%8A%E5%A5%A5%E6%97%A5%E4%B8%8E%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97%E3%80%8B%EF%BC%88Ori-and-the-Blind-Forest%EF%BC%89/"/>
    <id>https://liujunjie11.github.io/2020/04/20/Window10下玩《奥日与黑暗森林》（Ori-and-the-Blind-Forest）/</id>
    <published>2020-04-20T15:08:38.000Z</published>
    <updated>2020-04-23T05:56:23.044Z</updated>
    
    <content type="html"><![CDATA[<p>以此文章来记录我近期接触<a href="https://store.steampowered.com/" target="_blank" rel="external">steam</a>以及正版单机游戏的故事以及一些小问题的记录，以观后效之用。</p><a id="more"></a><p>众所周知，steam是一个游戏平台，里面的游戏应有尽有，花样百出，令人目不接遐…但是基本大部分游戏都是要花钱的。因为一个巧合我接触到了<a href="https://baike.baidu.com/item/%E5%A5%A5%E6%97%A5%E4%B8%8E%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97/16082025?fr=aladdin" target="_blank" rel="external">奥日与黑暗森林》（Ori and the Blind Forest）</a>这款游戏，这是一款非常独特的游戏，它的背景音乐以及原创故事就在开场动画的一瞬间就将我深深的吸引住了，为此我发誓不管花多少钱我都要玩到这款游戏，并且将其长期收藏起来，于我而言，这款游戏真的是一款艺术品级别的游戏啊！</p><p>首先当然是第一时间下载了<a href="https://store.steampowered.com/" target="_blank" rel="external">steam</a>客户端，因为心生向往，我将手头的window以及Mac笔记本均装上了相对应版本的steam平台，但是由于内存不足的问题，我将主平台选择在了window<br>本上，后来发现这是一个明智的选择。因为本身不是很喜欢那种主流的电视单机游戏，平时也不是很感兴趣，没想到因为奥日这款游戏成功将我拉到了这个类型的游戏领域，真的是无意间扩大了我的游戏视野…因祸得福？哈哈，不过最后的游戏购买确实也让我付出金钱代价…我像入了 魔怔一般，发狂般的将自己喜欢的龙珠系列的主流单机游戏下了个遍，另外也想补上小时候的游戏情怀，我又在网上找到了<a href="https://tieba.baidu.com/p/6153817871" target="_blank" rel="external">龙珠Z：电光火石3的游戏资源</a>以及<a href="https://pan.baidu.com/s/1oxU80fXGIuFUPMN_QB4zmw" target="_blank" rel="external">数码宝贝格斗编年史</a>（<strong>提取码: 2twn</strong>）的镜像资源，成功还原了我小时候花钱去人家家里体验多时的游戏…这该死的情怀啊！</p><p>好了，废话不多说了，好好记录下我刚开始接触steam以及奥日这款游戏的故事。</p><h1 id="奥日"><a href="#奥日" class="headerlink" title="奥日"></a>奥日</h1><p>这款游戏有所谓的<strong>终极版</strong>！即全名为Ori and the Blind Forest: Definitive Edition（奥日与黑暗森林：终极版）…</p><blockquote><p>致于喜欢中意这款游戏的玩家可参考区别链接：<a href="https://www.zhihu.com/question/378720422" target="_blank" rel="external">奥日与黑暗森林原版和终极版有什么区别？</a><br>终极版在淘宝和杉果游戏平台均可买到，而且用<strong>买终极版的钱里还自然打包了原版在里面！</strong>但是不幸的是，我已经花了原版的冤枉钱了…</p></blockquote><p>另外下载完终极版因为是英文版的，这就需要下载<a href="https://dl.3dmgame.com/patch/70819.html" target="_blank" rel="external">中文补丁</a>了，下载完解压，然后在已经安装在steam上的游戏设置如下操作：</p><ul><li>将下载解压完的补丁文件放在存奥日终极版的根目录下；</li><li>之后点开steam客户端奥日的游戏设置按钮；</li><li>浏览本地文件打开根目录下的中文补丁程序即可，其中的程序选择汉化游戏之后，系统会自动在桌面创建汉化完的奥日终极版游戏快捷方式。</li></ul><blockquote><p>因为之前不知道怎么汉化的流程，费了好大力气才在一个帖子上看见怎么操作，在此记录一下以观后效之用！</p></blockquote><p>关于这款游戏的疑惑就记录到这里吧，作为我小白已入门的操作证明以及记录吧…</p><h1 id="steam"><a href="#steam" class="headerlink" title="steam"></a>steam</h1><p>第一次接触这个steam，而且下载的是steam客户端，没想到确无形中带来了很多的问题：</p><h2 id="steam客户端些许界面乱码的问题"><a href="#steam客户端些许界面乱码的问题" class="headerlink" title="steam客户端些许界面乱码的问题"></a>steam客户端些许界面乱码的问题</h2><p>这个问题其实有些莫名其妙，最后得知其实是网络问题，客户端的一些界面如果乱码的话，需要额外使用加速器的梯子才能正常打开，不过使用翻墙软件也是可以正常打开的，说明在客户端的一些界面是已经被墙了的…而在<a href="https://store.steampowered.com/" target="_blank" rel="external">steam网页端</a>是不需要这么多的额外操作的，本地网络下就可以正常打开。</p><blockquote><p>这里有一个<a href="https://steam.wyjsq.cn/" target="_blank" rel="external">steamspeed</a>专门用于配合steam客户端使用的加速器，不过在我下载之后系统有提示病毒威胁，我就没采用此程序，不过因此也意外发现其实用翻墙软件也是可以打开客户端别墙界面的。</p></blockquote><h2 id="steam上购买提示重复购买，需稍后重试"><a href="#steam上购买提示重复购买，需稍后重试" class="headerlink" title="steam上购买提示重复购买，需稍后重试"></a>steam上购买提示重复购买，需稍后重试</h2><p>这个问题因为是在客户端购买游戏时，翻墙不顺畅，所以导致了好几次支付宝支付界面弹不出来，之后确有了提示重复购买，需稍后重试的问题，关于这个问题仅需要等待一小段时间，然后再次开启购买界面点击购买就没这个问题了。</p><blockquote><p>关于避免这个问题的最好办法就是以后购买支付去<a href="https://store.steampowered.com/" target="_blank" rel="external">steam网页端</a>就行了，<strong>在steam购买时要一气呵成，不然也容易出现问题</strong>。</p></blockquote><h2 id="steam提示凭证失效，需再次输入密码"><a href="#steam提示凭证失效，需再次输入密码" class="headerlink" title="steam提示凭证失效，需再次输入密码"></a>steam提示凭证失效，需再次输入密码</h2><p>这个问题我在一些论坛上所了解到的如下：</p><ul><li>网络不顺畅；</li><li>IP有变化；</li><li>号被人盗了（极小可能）</li></ul><p>….</p><p>因为接触了steam以及一些单机游戏，反正是真正的实践性的开阔了我的游戏视野，也不再将视野总是放在腾讯的几个游戏上了…不过我为此也付出了巨大的金钱代价…心在滴血啊，不过想着是为了支持正版，又是自己本身喜欢的游戏，又何乐而不为呢。最后，我又额外添置了Xbox的游戏手柄，我的心真疼。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以此文章来记录我近期接触&lt;a href=&quot;https://store.steampowered.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;steam&lt;/a&gt;以及正版单机游戏的故事以及一些小问题的记录，以观后效之用。&lt;/p&gt;
    
    </summary>
    
      <category term="游戏" scheme="https://liujunjie11.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="游戏" scheme="https://liujunjie11.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>聊赖日子</title>
    <link href="https://liujunjie11.github.io/2020/03/19/%E8%81%8A%E8%B5%96%E6%97%A5%E5%AD%90/"/>
    <id>https://liujunjie11.github.io/2020/03/19/聊赖日子/</id>
    <published>2020-03-19T14:54:03.000Z</published>
    <updated>2020-03-19T17:10:21.622Z</updated>
    
    <content type="html"><![CDATA[<p>以此记录这段时间的百无聊赖。</p><a id="more"></a><p>迷茫、麻木、颓废。是我这段时间的主题词，我不屑于去工作了，也不屑于认真去生活了，彻彻底底变成一个麻木的杂种。可以理所当然的享受挥霍被给予的伸手张来，而疫情的限制也顺理成章成为我皇而堂之的理由。我也振振有辞、胸有成竹的去评判一件事和某个人了，由此我自所谓的不屑，亦然成为我堕落颓废的衍生品。</p><p>我好似行尸走肉，我的世界同时也进入一片雾茫。前面失去了曾经耀眼的光芒，我也失去了生活的理想，我变得百无聊赖了，不，应该说早就变得百无聊赖了。无节制的颓废与无节制的放纵，这是痛苦的挣扎，也是短暂可耻的快乐源泉，曾经的我好似早已面无全非，我也不再是曾经的我了。还是安稳变成了借口，让我心甘情愿接受这无趣的折磨与煎熬…我是痛苦的，也是极度麻木的，我只是再次看不到希望了。</p><p>我也明白，这不过是无能的迷茫…</p><p>我需要改变，也需要奋进起来，摆脱这早就让我作呕的生活状态。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以此记录这段时间的百无聊赖。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>观《一句顶一万句》</title>
    <link href="https://liujunjie11.github.io/2019/12/11/%E8%A7%82%E3%80%8A%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5%E3%80%8B/"/>
    <id>https://liujunjie11.github.io/2019/12/11/观《一句顶一万句》/</id>
    <published>2019-12-11T13:55:18.000Z</published>
    <updated>2019-12-11T14:22:57.247Z</updated>
    
    <content type="html"><![CDATA[<p>前些天看了一部电影叫做<a href="https://v.qq.com/x/cover/tldyy9mk2ladxmg/u0025f9l380.html" target="_blank" rel="external">“一句顶一万句”</a>。</p><a id="more"></a><p>电影的开头是在民政局，有人离婚也有人结婚。一对男女高高兴兴的等着拿结婚证，工作人员问了他们为什么结婚，这对男女的回答是“因为说的来话，下句没说就知道对方要说什么”。转眼十年过去，这对夫妻有了自己的孩子，十年前原本有希望成为军官的男主人公因为一些原因，在人生事业上不是很顺利，导致女主人公在每次听取男主人公说自己的未来展望时很不屑，也有些无所谓了。其中女主人公最后选择了出轨，男主人公跟踪发现之后，也掌握了证据，他跟女主人公坐在一起聊了聊这个事，其实他也接受不了这个事实，原本只是打算以离婚来要挟女主人公悔改，他问了原因，女主人公的回答是：“感觉我们在平时生活中已经说不上话、对不上话了，跟以前不一样了，而跟他，我能说上话”。他们的孩子知道了这个事之后，彻夜难眠，最终大病一场。电影的结局是男主人公想拿刀跟女主人公同归于尽时，他们的孩子给爸爸打了一个电话：“….不去香港了，我们去青岛，香港有海，青岛也有海…“。剧中人有一句话：”日子不是过从前的，而是过以后的“。这句话我第一次听到我不能完全理解，两个人从相识到相知再到相爱再到结婚，一同历经生活的磨练，两个人饱经风霜难免都不会变得沉默寡言。曾经的无话不谈变得面面无言，这是什么原因？我在这时突然又想起来一个我看过的韩国广告，开头里面是一对夫妻想要离婚，妻子沉默了一会提出一个要求，就是再等一个月时间，但是在这一个月里要求男方每天在起床时跟她说早安，并且吻她的额头作为早礼，要求男方每天去上班跟她说“我去上班了”，中午和晚上回家说“我回来了”，并且要给她一个拥抱，最后他们夫妻两个这样做了一个月之后，他们找到了以前的感觉，一个月前要离婚的事也就烟消云散了。我突然就恍然大悟了，是啊，或许生活中的压力会使得夫妻生活也陇上一层压抑感，或许也会让彼此两个人变得沉默寡言，但是却不知这其实都是暂时的一种习惯，两个人沉默寡言久了自然就成了一种习惯，自然也就毫无激情可言了。回想上面的那个韩国的广告，爱其实也很简单，其实爱也能成为习惯，不过是一句早安晚安和一个疲惫后的拥抱…两个人的日子是两个人过下去的，但是选择却是可以不断变化的，有些话，有些微小的细节其实很简单就能体现爱意，只是我们大多数人都忽略了，因为生活中的种种因素，或许变得懒惰了，或许变得无所谓了，但是如果每天只要有了那些微小的细节去表达体现彼此的爱意，或许婚姻就不会变得毫无激情可言，或许婚姻就是另一种结局，而这个结局两个人都能去做选择得到。这部电影的名字“一句顶一万句”不妨可以理解为：爱人的一句可以顶上陌生人的一万句。当今的婚姻有很多是很浮躁的，很多的两个人敢于勇敢的结婚，但是却没有维护好婚姻，很多时候不过是败在了习惯上，败在了选择上，而这些其实都可以去改变。</p><p>婚姻或许并不是爱情的坟墓，大多数时候不过是我们没有习惯性去维护。</p><p>我其实也联想到了我现在跟那个南国异性的这种情况，哈哈，我跟她现在也是可以无话不谈，会不会有哪一天？但是我已经有了答案。我曾经在大二有过一个感慨：“活着生活，在无数个平平淡淡里，在有些个出其不意里”。现在我想用在两个人的姻缘之上做一些改变，那就是：“两个人平平淡淡的生活，但基于爱，而大多数时候的出其不意也都能化解。”后知后觉，我发现我现在就是对她无话不谈，突然莫名就有些后怕起来，哈哈。</p><p>后记以及偏题记～</p><p>我最近发现我来北京实习的这段时间，我居然慢慢的变得迂腐了，很多条条框框开始束缚着我了，我也开始变得有些轻浮，居然也会动不动张口就去下结论去评价人和事了。我在学校其实不是这样的。我想我还需要去适应一些东西，但是也要坚定自己！</p><p>环境与人本身是两回事，只不过有时糊涂了不容易区分，就容易无法自拔了。</p><p>其实这些我可以写成一篇文章来记录下来的，但是既然是以介绍一个电影的形式牵连出来的感想，而且想要介绍的对象是给南国异性的，我不妨就当在南国异性那里做文章了，哈哈。因为还是想记录下这些文字，就在博客复制过来这些文字了，打字这么多还是很不容易滴～～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前些天看了一部电影叫做&lt;a href=&quot;https://v.qq.com/x/cover/tldyy9mk2ladxmg/u0025f9l380.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“一句顶一万句”&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>北京的雪</title>
    <link href="https://liujunjie11.github.io/2019/11/30/%E5%8C%97%E4%BA%AC%E7%9A%84%E9%9B%AA/"/>
    <id>https://liujunjie11.github.io/2019/11/30/北京的雪/</id>
    <published>2019-11-30T08:02:03.000Z</published>
    <updated>2019-11-30T09:01:41.853Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/51381575073851_.pic.jpg" alt=""></p><p>北京的雪来的在我意料之中。但没想到北京的冬天会这么冷…</p><a id="more"></a><p>不知不觉来到北京快近三个月，此刻的我不仅心无波澜，居然偷偷感到一丝的心安。同时也感觉莫名其妙的，为什么感到心安呢？是自我麻醉还是故弄玄虚？我想后者的部分会更多一些，哈哈。</p><p>如今，慢慢的，居然开始变得不那么喜欢雪了。回首当初见过的冰天雪地与壮阔冰江，那时的我欢喜的不得了，以为眼前看到的就是世界上最为美丽的风景。回望过去，当时的我还很所谓的自以为是，但是回想身处在当时的环境当中，不禁又再次感到心旷神怡的那种久违的感觉，那种感觉早已经深深刻在我的骨子里了。那时的风景与我，都很美好。如今再次看到雪覆盖大地，已经身处在北京了。</p><p>北京北京，这个地方，这个字词，当初承载着无数人的梦想与希望，有人有所谓的失败有人有所谓的成功，居然在当下成为了广大民众敬而远之的“网络热词”，我明白亦理解其中的含义为何，但是对于我来说不过都是平淡无奇。其中的情怀，包括的那些人们的青春梦想，埋葬在这里继续传承。好似有些偏题了呢…</p><p>看到雪，亦面无表情心无波澜了。回想当初的选择与安逸，我反而没有一丝后悔，我或许是麻木了，但我亦更清醒了。</p><p>看到雪，心生厌恶过。不喜欢这过分的纯白无暇，亦不喜欢在其覆盖下的黑压压的土地，即使有丑陋也有美丽，每当想到雪慢慢化去之后的那一片苍茫，我居然会感觉到作呕。</p><p>今天看到北京的雪，我看到了曾经的我和现在的我。不再痴迷于一片外在风景，更多的是会联想到背后的丑恶。我确实有些变得所谓的“消极”？但如今每到有感概也不像曾经那么偏激了，但我有时候又宁愿自己变得偏激一些。矛盾着矛盾着，我感觉我亦收获了很多，我不叫它是所谓的“成长”，只是我在不断的释怀之中明白了更多。写到这里，思绪居然会感觉到很混乱，心境也不再平静。</p><p>我是有些胡编乱造了呢，还是变得生疏了，感觉变得不自然了。我可能是变得有些做作了，还带着虚伪，还带着虚荣，变得不像自己了，不像从前那样豁达的自己了。</p><p>每一次蜕变可能都会伴随着心惊肉跳吧，带着一些不安，或许是不习惯了？亦回首多次闭上眼睛深沉思考，获得出来的结论与自我安慰都是沉默以对和心无波澜一般的，居然感觉有些不甘心，我是要和自己怄气。</p><p>我或许是变得更为明智了吧。虽然有时不近人情，显得绝情亦显得冷漠，但我亦然心安理得，我不认为这是封闭，只不过不再那么轻浮于人事。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://liu-1258031152.cos.ap-beijing.myqcloud.com/51381575073851_.pic.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;北京的雪来的在我意料之中。但没想到北京的冬天会这么冷…&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用scrapy问题汇总</title>
    <link href="https://liujunjie11.github.io/2019/09/13/%E4%BD%BF%E7%94%A8scrapy%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>https://liujunjie11.github.io/2019/09/13/使用scrapy问题汇总/</id>
    <published>2019-09-13T04:51:16.000Z</published>
    <updated>2020-05-04T12:11:47.463Z</updated>
    
    <content type="html"><![CDATA[<p>待完成….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;待完成….&lt;/p&gt;

      
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="https://liujunjie11.github.io/categories/Scrapy/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="https://liujunjie11.github.io/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda2/3在eclipse中分开下载Python2/3库</title>
    <link href="https://liujunjie11.github.io/2019/09/11/Anaconda2:3%E5%9C%A8eclipse%E4%B8%AD%E5%88%86%E5%BC%80%E4%B8%8B%E8%BD%BDPython2:3%E5%BA%93/"/>
    <id>https://liujunjie11.github.io/2019/09/11/Anaconda2:3在eclipse中分开下载Python2:3库/</id>
    <published>2019-09-11T10:34:16.000Z</published>
    <updated>2020-05-04T12:09:06.768Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下在我使用eclipse上的Python插件PyDev结合Anaconda2/3下载相关Python库的过程，我使用的是MacBook Pro。</p><a id="more"></a><p>实际上有两种可操作的下载方式：</p><ul><li>使用命令行下载</li><li>结合PyDev设置下载</li></ul><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul><li>需要将Anaconda2和Anaconda3的版本分别安装成功在电脑上</li><li>安装eclipse以及Pydev相关插件</li></ul><h1 id="结合命令行下载"><a href="#结合命令行下载" class="headerlink" title="结合命令行下载"></a>结合命令行下载</h1><p>一般在成功安装Anaconda2和Anaconda3之后均需要环境配置，很简单，即使用相关命令打开Mac终端系统文件配置，添加入Anaconda2和Anaconda3的文件路径，然后快速使命令生效即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#vim编译器打开相关文件</span></div><div class="line">vim ~/.bash_profile</div><div class="line"></div><div class="line"><span class="comment">#一般的配置即添加相关路径即可</span></div><div class="line">export PATH=/opt/local/bin:/opt/local/sbin:$PATH</div><div class="line"><span class="comment">#如下我的配置</span></div><div class="line"><span class="comment"># added by Anaconda2 5.1.0 installer</span></div><div class="line">export PATH=<span class="string">"/anaconda2/bin:$PATH"</span></div><div class="line"></div><div class="line"><span class="comment"># added by Anaconda3 5.1.0 installer</span></div><div class="line">export PATH=<span class="string">"/anaconda3/bin:$PATH"</span></div><div class="line"></div><div class="line"><span class="comment">#使得命令快速生效</span></div><div class="line">source ~/.bash_profile</div></pre></td></tr></table></figure><blockquote><p>具体可参考：<a href="https://www.jianshu.com/p/acb1f062a925" target="_blank" rel="external">MAC 设置环境变量PATH 和 查看PATH</a></p></blockquote><p>在配置好以上环境问题之后，这样便使得：</p><ul><li>Anaconda2中的python2版本替代了系统默认的python2</li><li>Anaconda3中的python3版本替代了系统默认的python3</li></ul><p>这样便可以使用pip命令分别安装相关package了，非常方便：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#python2下载package</span></div><div class="line">py <span class="number">-2</span> -m pip install *</div><div class="line"></div><div class="line"><span class="comment">#python3下载package</span></div><div class="line">py <span class="number">-3</span> -m pip install *</div></pre></td></tr></table></figure><p>另外提示一下，Anaconda2与Anaconda3的安装顺序决定了系统的默认python版本，比如我是先安装的Anaconda2，后来安装的Anaconda3中的Python3即为系统的python版本了，在使用<code>pip install *</code>时直接下载到Anaconda3的python3中的package目录。</p><blockquote><p>这里参考了：<a href="https://blog.csdn.net/qq_39081974/java/article/details/79716942" target="_blank" rel="external">python2和python3分别安装包</a></p></blockquote><h1 id="结合PyDev设置下载"><a href="#结合PyDev设置下载" class="headerlink" title="结合PyDev设置下载"></a>结合PyDev设置下载</h1><h2 id="导入Anaconda2与Anaconda3中的python"><a href="#导入Anaconda2与Anaconda3中的python" class="headerlink" title="导入Anaconda2与Anaconda3中的python"></a>导入Anaconda2与Anaconda3中的python</h2><p>这一个方法当然需要先将eclipse以及相关的Pydev插件安装好，另外需要将安装好的Anaconda2与Anaconda3中的python导入进去。</p><ul><li>Project -&gt; Properties -&gt; PyDev - Interpreter/Grammar</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-51-09.gif" alt=""></p><p>之后在此界面添加安装Anaconda2与Anaconda3的python源路径即可，或者可以试试<code>Quick Auto - Config</code>快速找到并且添加系统中有效的python源。</p><ul><li>New… -&gt; Browse相关python源路径即可</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-51-50.gif" alt=""></p><ul><li>Quick Auto - Config可快速找到系统并且添加有效python源</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-52-14.gif" alt=""></p><blockquote><p>这个不是很准确，有时候并不能起到实质性作用，推荐自己手动添加。</p></blockquote><h2 id="分别手动选择pip下载package"><a href="#分别手动选择pip下载package" class="headerlink" title="分别手动选择pip下载package"></a>分别手动选择pip下载package</h2><p>首先确定已经将Anaconda2与Anaconda3的python源路径添加成功，这样才能使得eclipse识别已有的package。</p><p>分别点击Anaconda2与Anaconda3的python源路径会发现下方会出现eclipse已经识别的package以及相关目录结构。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-53-25.gif" alt=""></p><p>这时仅需要点击在右的<code>Install/Uninstall with pip</code>使用pip下载package，或者<code>Install/Uninstall with conda</code>使用conda命令下载package入相对应的Anaconda2与Anaconda3。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-54-00.gif" alt=""></p><p>这样就完成了分别下载package的任务，以前还是小白的时候不懂，现在经过摸索之后慢慢明白了该怎么去处理Anaconda2与Anaconda3分别下载package的问题，特在此记录下来。</p><h1 id="额外可参考链接"><a href="#额外可参考链接" class="headerlink" title="额外可参考链接"></a>额外可参考链接</h1><ul><li><a href="https://pip.pypa.io/en/stable/" target="_blank" rel="external">pip官网文档</a></li><li><a href="https://www.eclipse.org/" target="_blank" rel="external">Eclipse官网</a></li><li><a href="https://www.anaconda.com/" target="_blank" rel="external">Anaconda官网</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下在我使用eclipse上的Python插件PyDev结合Anaconda2/3下载相关Python库的过程，我使用的是MacBook Pro。&lt;/p&gt;
    
    </summary>
    
      <category term="Anaconda" scheme="https://liujunjie11.github.io/categories/Anaconda/"/>
    
      <category term="eclipse" scheme="https://liujunjie11.github.io/categories/eclipse/"/>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
    
      <category term="Anaconda" scheme="https://liujunjie11.github.io/tags/Anaconda/"/>
    
      <category term="eclipse" scheme="https://liujunjie11.github.io/tags/eclipse/"/>
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取虎扑新闻</title>
    <link href="https://liujunjie11.github.io/2019/09/11/Python%E7%88%AC%E5%8F%96%E8%99%8E%E6%89%91%E6%96%B0%E9%97%BB/"/>
    <id>https://liujunjie11.github.io/2019/09/11/Python爬取虎扑新闻/</id>
    <published>2019-09-11T10:31:58.000Z</published>
    <updated>2020-05-15T06:00:20.350Z</updated>
    
    <content type="html"><![CDATA[<p>这个是在北京实习期的公司要求做的一个小的项目，简单在此做个主要内容的解析以及相关主要代码的分享。</p><a id="more"></a><h1 id="简要解析"><a href="#简要解析" class="headerlink" title="简要解析"></a>简要解析</h1><p>首先以爬取新闻内容以及来源等主要信息为例。</p><ul><li>爬取的来源链接：<a href="https://voice.hupu.com/china/1" target="_blank" rel="external">https://voice.hupu.com/china/1</a></li></ul><p>其中的题目以及时间和来源以及可以在静态页面上进行抓取，直接利用Python的相关库进行清洗提取即可。另外在主页面可以抓取到每一条新闻的内容页面，内容页面即包括了文字及图片，这些均可直接提取。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.36.32.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.39.47.png" alt=""></p><p>另外为了获取新闻的浏览量，我们选择了进入新闻相应的论坛进行了爬取，如下可知：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.40.40.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.41.17.png" alt=""></p><p>关于这个浏览量是实时变化的，所以需要额外解析。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-15-2020%2013-46-08.gif" alt=""></p><blockquote><p>可得实时变化的链接为：<a href="https://msa.hupu.com/thread_hit?tid=35418557&amp;_=1589521335428" target="_blank" rel="external">https://msa.hupu.com/thread_hit?tid=35418557&amp;_=1589521335428</a></p><p>通过缩减URL可得：<a href="https://msa.hupu.com/thread_hit?tid=35418557" target="_blank" rel="external">https://msa.hupu.com/thread_hit?tid=35418557</a></p></blockquote><p><code>tid</code>  即为每个文章URL上的的ID。</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><p>主要贴上用Scrapy写的解析部分的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">@time：2019.9.10</span></div><div class="line"><span class="string">@author: junliu</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> os, sys</div><div class="line"><span class="keyword">import</span> time, datetime</div><div class="line"><span class="keyword">import</span> cookielib</div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">"utf-8"</span>)</div><div class="line"> </div><div class="line"><span class="comment"># 虎扑CBA新闻：https://voice.hupu.com/cba</span></div><div class="line"><span class="comment"># 虎扑NBA新闻：https://voice.hupu.com/nba</span></div><div class="line"><span class="comment"># 虎扑足球新闻：https://voice.hupu.com/soccer</span></div><div class="line"><span class="comment"># 虎扑中超足球新闻：https://voice.hupu.com/china</span></div><div class="line"><span class="comment"># 翻页示例：https://voice.hupu.com/china/page/</span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_new_info</span><span class="params">()</span>:</span></div><div class="line">    nba_url = <span class="string">'https://voice.hupu.com/nba'</span></div><div class="line"><span class="comment">#     comment_url = 'https://www.ixigua.com/api/commentv2/video_comment?group_id=6733070858316677644&amp;item_id=6733070858316677644&amp;group_source=2'</span></div><div class="line">    html = get_html_res(nba_url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    new_list = soup.find(<span class="string">'div'</span>, class_=<span class="string">'news-list'</span>)</div><div class="line"><span class="comment">#     print len(new_list.find_all('li'))</span></div><div class="line"><span class="comment">#     print new_list.find_all('li')[-1]</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> new_list.find_all(<span class="string">'li'</span>):</div><div class="line">        <span class="keyword">print</span> i.find(<span class="string">'div'</span>, class_=<span class="string">"list-hd"</span>).get_text().strip()</div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">0</span>].get(<span class="string">'href'</span>)</div><div class="line"><span class="comment">#         get_new_content(i.find_all('a')[0].get('href'))</span></div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">1</span>].get(<span class="string">'title'</span>)</div><div class="line">        st = i.find_all(<span class="string">'a'</span>)[<span class="number">1</span>].get(<span class="string">'title'</span>)</div><div class="line">        format = datetime.datetime.strptime(st, <span class="string">'%Y-%m-%d %H:%M'</span>)</div><div class="line">        time_tuples = format.timetuple()</div><div class="line">        <span class="keyword">print</span> int(time.mktime(time_tuples))</div><div class="line">        <span class="keyword">print</span> <span class="string">'*'</span> * <span class="number">30</span></div><div class="line">        <span class="keyword">print</span> i.find(<span class="string">'span'</span>, class_=<span class="string">"other-left"</span>).get_text().split(<span class="string">' '</span>)[<span class="number">-1</span>].rstrip()  </div><div class="line">        name = i.find(<span class="string">'span'</span>, class_=<span class="string">"other-left"</span>).get_text().split(<span class="string">' '</span>)[<span class="number">-1</span>].rstrip()</div><div class="line">        keyword = <span class="string">'虎扑'</span></div><div class="line">        <span class="keyword">if</span> keyword <span class="keyword">in</span> name <span class="keyword">or</span> keyword == name <span class="keyword">is</span> <span class="keyword">True</span>:</div><div class="line">            item = <span class="number">0</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            item = <span class="number">1</span></div><div class="line">        <span class="keyword">print</span> item</div><div class="line">        <span class="keyword">print</span> <span class="string">'*'</span> * <span class="number">20</span></div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">2</span>].get(<span class="string">'href'</span>)</div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">3</span>].get(<span class="string">'href'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_new_content</span><span class="params">(url)</span>:</span></div><div class="line">    url = url</div><div class="line">    html = get_html_res(url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    items = []</div><div class="line"><span class="comment">#     if soup.find('div', class_="artical-main-content").img is not None:</span></div><div class="line"><span class="comment">#         content = soup.find('div', class_="artical-main-content")</span></div><div class="line"><span class="comment">#         for link in content.find_all('p'):</span></div><div class="line"><span class="comment">#             if link.find('img') is not None:</span></div><div class="line"><span class="comment">#                 print link.find('img').get('src')</span></div><div class="line"><span class="comment">#     else:</span></div><div class="line"><span class="comment">#         pass</span></div><div class="line">    </div><div class="line">    <span class="keyword">print</span> soup.find(<span class="string">'div'</span>, class_=<span class="string">'artical-content-read'</span>)</div><div class="line"><span class="comment">#     print soup.find('div', class_='artical-importantPic').img.get('alt')</span></div><div class="line"><span class="comment">#     print soup.find('div', class_='artical-importantPic').img.get('src')</span></div><div class="line"><span class="comment">#     print soup.find('div', class_="artical-main-content").get_text()</span></div><div class="line">    <span class="keyword">print</span> soup.find(<span class="string">'div'</span>, class_=<span class="string">"artical-importantPic"</span>).img</div><div class="line">    content = soup.find(<span class="string">'div'</span>, class_=<span class="string">"artical-main-content"</span>) </div><div class="line">    <span class="keyword">for</span> content_html <span class="keyword">in</span> content.find_all(<span class="string">'p'</span>):</div><div class="line">        <span class="keyword">print</span> content_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_bbs_info</span><span class="params">(url)</span>:</span></div><div class="line"><span class="comment">#     url = url</span></div><div class="line">    url = url</div><div class="line">    html = get_html_res(url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    infos = soup.find(<span class="string">'span'</span>, class_=<span class="string">"browse"</span>).get_text().replace(<span class="string">'\n'</span>, <span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</div><div class="line">    comment_num = re.match(<span class="string">'^.*?(\d+).*$'</span>, infos).group(<span class="number">1</span>)</div><div class="line">    bbs_id = url.split(<span class="string">'/'</span>)[<span class="number">-1</span>].split(<span class="string">'.'</span>)[<span class="number">0</span>]</div><div class="line">    browse = get_html_res(<span class="string">'https://msa.hupu.com/thread_hit?tid='</span> + bbs_id)</div><div class="line">    <span class="keyword">print</span> comment_num, browse</div><div class="line">    item = []  <span class="comment"># 用于存标签字段 </span></div><div class="line">    item1 = []  <span class="comment"># 用于存链接</span></div><div class="line">    tags = soup.find(<span class="string">'div'</span>, class_=<span class="string">"basketballTobbs_tag"</span>)</div><div class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags.find_all(<span class="string">"a"</span>):</div><div class="line">        item.append(tag.get(<span class="string">'href'</span>))</div><div class="line">        item1.append(tag.get_text())</div><div class="line">    <span class="keyword">print</span> item, item1</div><div class="line">        </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cookies</span><span class="params">(url)</span>:</span></div><div class="line">    url = url </div><div class="line">    session = requests.session()</div><div class="line">    response = session.get(url=url)</div><div class="line">    <span class="keyword">print</span> session.cookies.get_dict()</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html_res</span><span class="params">(url)</span>:</span></div><div class="line">    session = requests.session()</div><div class="line">    url = url</div><div class="line">    headers = &#123;</div><div class="line">        <span class="string">'accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</div><div class="line">        <span class="string">'accept-encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">        <span class="string">'accept-language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">        <span class="string">'cache-control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'cookie'</span>: <span class="string">'_cnzz_CV30020080=buzi_cookie%7Cdddeb463.80b3.1b1e.9890.4620154a3f87%7C-1; _dacevid3=dddeb463.80b3.1b1e.9890.4620154a3f87; _cnzz_CV30020080=buzi_cookie%7Cdddeb463.80b3.1b1e.9890.4620154a3f87%7C-1; Hm_visit=1568082562621; Hc_visit=1568082562631; sajssdk_2015_cross_new_user=1; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2216d19010eaf7a9-0e6d57be88ed6f-38677501-1296000-16d19010eb0310%22%2C%22%24device_id%22%3A%2216d19010eaf7a9-0e6d57be88ed6f-38677501-1296000-16d19010eb0310%22%2C%22props%22%3A%7B%7D%7D; __dacevst=f0c555d7.42b2f9a7|1568097712872'</span>,</div><div class="line">        <span class="string">'Referer'</span>: <span class="string">'https://voice.hupu.com/nba'</span>,</div><div class="line">        <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36'</span></div><div class="line">        &#125;</div><div class="line">    request = session.get(url=url, headers=headers)</div><div class="line">    request.encoding = <span class="string">"utf-8"</span></div><div class="line">    html = request.text</div><div class="line">    <span class="keyword">return</span> html</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line"><span class="comment">#     get_xigua_info("https://www.ixigua.com/i6733070858316677644/")</span></div><div class="line">    get_new_info()</div><div class="line"><span class="comment">#     get_new_content('https://voice.hupu.com/cba/2475206.html')</span></div><div class="line"><span class="comment">#     get_cookies('https://voice.hupu.com/nba')</span></div><div class="line"><span class="comment">#     get_bbs_info('https://bbs.hupu.com/29489225.html')</span></div><div class="line"><span class="comment">#     get_html_res('https://voice.hupu.com/cba/2474694.html')</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><p>其他的感觉也没什么好说的…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是在北京实习期的公司要求做的一个小的项目，简单在此做个主要内容的解析以及相关主要代码的分享。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://liujunjie11.github.io/categories/Python/"/>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="https://liujunjie11.github.io/categories/Scrapy/"/>
    
    
      <category term="Python" scheme="https://liujunjie11.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="https://liujunjie11.github.io/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取西瓜视频信息及真实地址</title>
    <link href="https://liujunjie11.github.io/2019/09/09/Python%E7%88%AC%E5%8F%96%E8%A5%BF%E7%93%9C%E8%A7%86%E9%A2%91%E4%BF%A1%E6%81%AF%E5%8F%8A%E7%9C%9F%E5%AE%9E%E5%9C%B0%E5%9D%80/"/>
    <id>https://liujunjie11.github.io/2019/09/09/Python爬取西瓜视频信息及真实地址/</id>
    <published>2019-09-09T06:15:11.000Z</published>
    <updated>2020-05-15T06:19:58.829Z</updated>
    
    <content type="html"><![CDATA[<p>这个是在去北京实习时，带我的师傅给我的一个任务，已经解析出来了，在这里记录一下。</p><a id="more"></a><p>因为时间问题，先耽搁下来，以后有机会再补全内容。先在下方贴上对我解析有帮助的文章链接，以观后效之用。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/32037022" target="_blank" rel="external">今日头条 视频解析 批量下载</a></li><li><a href="https://www.jianshu.com/p/63f3f25d3a03" target="_blank" rel="external">头条视频采集 带GUI界面 和代码详细注释</a></li><li><a href="https://www.jianshu.com/p/6ca1344a09db" target="_blank" rel="external">Python爬虫技巧-西瓜视频MP4地址获取</a></li><li><a href="https://docs.python.org/zh-cn/3/library/re.html" target="_blank" rel="external">re — 正则表达式操作</a></li><li><a href="https://juejin.im/post/5c8f15bde51d451d1118db99" target="_blank" rel="external">爬虫必备：Python 执行 JS 代码 —— PyExecJS、PyV8、Js2Py</a></li><li><a href="https://gitee.com/zuzong/python/blob/master/头条视屏抓取/net/DownVideo.py" target="_blank" rel="external">相关代码库</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是在去北京实习时，带我的师傅给我的一个任务，已经解析出来了，在这里记录一下。&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>死亡之后，意识的猜想</title>
    <link href="https://liujunjie11.github.io/2019/07/10/%E6%AD%BB%E4%BA%A1%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%84%8F%E8%AF%86%E7%9A%84%E7%8C%9C%E6%83%B3/"/>
    <id>https://liujunjie11.github.io/2019/07/10/死亡之后，意识的猜想/</id>
    <published>2019-07-10T12:41:53.000Z</published>
    <updated>2019-07-10T13:25:07.654Z</updated>
    
    <content type="html"><![CDATA[<p>人死之后会是什么样？人真正的神秘的地方即“意识”，又是这么一回事？今晚我有些想要记录的东西。这是我的猜想记录。</p><a id="more"></a><p>曾经有数次我有过短暂濒死状态，这些个经历我一直耿耿于怀并且百思不得其解，现今我开始慢慢的意识到，原来那或许就是说无谓的“濒死状态”了。在我的中学时代有一半是睡不好觉的，那个时期我真正的感觉生不如死，加上长期的“一事无成”，我的心理状态每天都是郁郁沉沉的，如今回想也是不忍回看的。每个晚上我都是处于挣扎的状态，常常睁着眼睛到第二天是常有的事，导致于我在那段时间特别害怕到晚上，以及害怕有安静的时刻。或许是因为睡眠原因还是身体本身有其他原因，我在那段时期经常性的会突然两眼一黑即倒地，有时在上课时突然两眼一黑倒在课桌上，然后又突然睁开眼睛，脑子陷入一种放空状态，另外也是懵懂的一种状态。令我记忆犹新的是我在初中时看舍友玩棋，我弓着身子突然想站起来，还没完全站起来，我便直接整个身子倒了下来，可能时间持续了好几秒，以至于旁边的同学都在我突然睁开眼睛回过神来猛的站起来问我“怎么了？”…这段画面这些年来一直在我脑海里徘徊着，直到前些日子我重新将关注点拉到“人体”上，我才有所顿悟。</p><p>人体是神奇的，我无数次幻想我们是被精心设计出来的人偶，这一点在我最近就开始了解到的两性之间的一些性学知识和相关的人体器官以及从前就有的一些相关的感慨为引点，我对于“人体”不得不发出惊叹，人体好似被设计的天衣无缝，面对各种情况面面俱到，活脱脱的一个“鬼斧神工”罢！在我的心里我一直认为，人体就是被设计出来的。再者，如今的主流假设说法即人类是由微生物到人猿进化而来的，这一点我是不认同的，因为其中虽然由于我本人对于这方面知识认知有限并且视野还不是特别开阔，我只能看到一些疑点，但是仅仅只是怀疑。</p><p>回到正题，在我经常性的“两眼黑倒”，那些个的霎那间我是处于无意识状态的，即眼前一片黑暗，我什么也感觉不到，如同绝对的“无”状态，没有所谓的回马灯旋转回忆，也没有所谓的灵魂升天说法，但是在现今我认为这不过是电波的残留造成的罢！在我看来，整个宇宙即包括地球如同一个场源，而我们脑中的电波即所谓的脑电波是长存的，电波即代表意识的存在，而在“人死”的瞬间（肉体即刻死亡不代表意识即刻消失），是有着电波残留的，这些或许可以解释上方的回马灯以及灵魂升天的说法，即不过是因电波残留导致意识残留，所以有影像残留是正常的。在所谓的意识真正的消失之后即代表电波回到了上方提到的场源中，继而若是有了新的新生儿肉体（主要），回到场源的电波即有可能附着在这些肉体身上，继而慢慢的形成新一轮的“意识”，因为电波可能会呆在场源长短的缘故，会导致电波强度减弱（主要情况）亦或者少数加强（导致所谓的附在上个肉体上的意识残留）。一个人的意识主要受牵于肉体的经历环境，所以意识能学习形成到哪种地步都是不一样的。这恰恰可以解释梦镜的由来，可以理解为意识残留。</p><p>另外，对于几秒的“先知”情况，我想不过是先几秒的预想罢，并且恰恰是有几率的符合上了罢…</p><p>文末，记录一下偏题的心得：我又回到了曾经那个犟傲的状态，不过那确实是真真正正的我以及我想要的我啊！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人死之后会是什么样？人真正的神秘的地方即“意识”，又是这么一回事？今晚我有些想要记录的东西。这是我的猜想记录。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>步步深渊</title>
    <link href="https://liujunjie11.github.io/2019/06/25/%E6%AD%A5%E6%AD%A5%E6%B7%B1%E6%B8%8A/"/>
    <id>https://liujunjie11.github.io/2019/06/25/步步深渊/</id>
    <published>2019-06-24T23:36:59.000Z</published>
    <updated>2019-06-25T00:02:33.596Z</updated>
    
    <content type="html"><![CDATA[<p>年轻过早的选择安稳，好似一眼将整个人生都已经看破。</p><a id="more"></a><p>明白了生活的真相与这世间的本质，或许会慢慢的变得世故了，停止思考，停止活动，停止人生…这样的人生未免太过于无趣与狼狈了。曾经几时的我又何尝不是如此呢？在某一时刻认识到所有的真相，看清身边的本质，我沉沦了，我亦沉默了，我开始慢慢的步入深渊，开始觉得一切如何发展都是理所当然了，这世间亦不过如此不是？我的生活从那时起开始失去从前的激情以及目标，人生好几回好似就可以一眼望到头，我却也倒悠然自得了。</p><p>这绝非是我想要的生活。死于安乐的心，是我沉沦的本质。</p><p>回望这些月的日子，我花耗精力在玩乐之中，自以为早已看清所有，但是生活中确实还有我要去完成的事情以及目标。一旦陷入一种自我感觉的“安稳”，对于我其实也是矛盾的，我放不下抛弃所有，我依然坚持关注世事如昨即便在游乐的日子里，我是痛苦的。</p><p>这绝不是所谓的迷茫，也不是自己可以找借口去说服自我的一种敷衍，只是我对于目前烦腻的状态失去激情，继而让我的生活失去了目标罢了。我需要重塑内心的丰富多彩与色彩斑斓，我依稀也能感觉到从前的满足与充实。</p><p>这或许总归会是我要面对的一道坎，早点面对与醒悟何尝又不是一种好事。富于形式的生活是我丧失激情与希望的跛脚石，我却被它击垮在地，代价是我为时不多的依旧流血的生命，我是可笑的，当初的我最为看不惯的，却在我身上体现的淋漓尽致了。</p><p>那时的我，是可悲的，也是最不应该的。在现在看来，或许也是幸运的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年轻过早的选择安稳，好似一眼将整个人生都已经看破。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://liujunjie11.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://liujunjie11.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于爬取NBA官网(NBA.com)数据</title>
    <link href="https://liujunjie11.github.io/2019/06/18/%E5%85%B3%E4%BA%8E%E7%88%AC%E5%8F%96NBA%E5%AE%98%E7%BD%91-NBA-com-%E6%95%B0%E6%8D%AE/"/>
    <id>https://liujunjie11.github.io/2019/06/18/关于爬取NBA官网-NBA-com-数据/</id>
    <published>2019-06-18T02:21:04.000Z</published>
    <updated>2019-06-18T03:02:03.586Z</updated>
    
    <content type="html"><![CDATA[<p>关于<a href="https://ca.nba.com/" target="_blank" rel="external">NBA官网</a>的数据爬取的解析，其中记录了视频源链接(可直接进行下载的链接)以及文字的可爬取解析过程。</p><a id="more"></a><h1 id="爬取视频解析过程"><a href="#爬取视频解析过程" class="headerlink" title="爬取视频解析过程"></a>爬取视频解析过程</h1><p>以<a href="https://www.nba.com/history/legends/profiles/michael-jordan" target="_blank" rel="external">《Legends profile: Michael Jordan》</a>为例，其中有视频亦有文字。在爬取这些个视频之前我以为又是<a href="https://zh.wikipedia.org/wiki/M3U" target="_blank" rel="external">M3u8格式</a>的，曾经在国内主流视频平台均有见到过这种格式，至今我还没有完全破解该格式爬取的方法…所以心里没底。出乎意料地，在<strong>NBA官网上都是<code>.mp4</code>格式的。</strong>爬取解析过程中也是很轻松就爬取到了视频源。</p><p>千言万语不过一张图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-06-18%20%E4%B8%8A%E5%8D%8810.31.10.png" alt=""></p><blockquote><p>即打开对应的<a href="https://zh.wikipedia.org/wiki/XMLHttpRequest" target="_blank" rel="external"><code>.XHR</code>格式</a>的进行筛选，即可在其中查找到资源源地址，发现每一个视频都有这么一个文件，里面就可以查找到视频的各种清晰度等信息…整个过程还是很轻松的。<strong>其实这种方法可以适用很多网站！</strong></p></blockquote><p>以下为动图操作演示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-33-35.gif" alt=""></p><blockquote><p>拿到视频的源地址之后，可直接用浏览器进行下载即可，当然若是下载的多可用Python写个爬虫程序亦可。</p></blockquote><h1 id="关于文字解析"><a href="#关于文字解析" class="headerlink" title="关于文字解析"></a>关于文字解析</h1><p>可先看以下的图解析：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-06-18%20%E4%B8%8A%E5%8D%8810.35.22.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-34-51.gif" alt=""></p><blockquote><p>实际上可发现文字部分还是属于一种静态资源的(实际上文字资源都是这么一回事…)关于静态资源的爬取就不多说了，直接启用Python结合一些模块爬取是最快的。</p></blockquote><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>通过结合<strong>Chrome浏览器</strong>下载下来的视频演示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-43-07.gif" alt=""></p><p>就这样了～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于&lt;a href=&quot;https://ca.nba.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NBA官网&lt;/a&gt;的数据爬取的解析，其中记录了视频源链接(可直接进行下载的链接)以及文字的可爬取解析过程。&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://liujunjie11.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
